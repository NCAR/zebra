#!/usr/bin/python
import sys,os,os.path,time
# make a new iop directory

def safeunlink(filename):
    """ remove a link w/o throwing an execption if it does not exist """
#    print 'unlinking %s' % filename
    try:
        os.unlink(filename)
    except OSError:
        pass

def main():
    baseDir = '/scr/data/'
    spolLink = 'spol'	# <baseDir>/<spolLink> will always point to the
    			# current IOP

    #
    # These are directories always necessary for S-Pol operations.
    #
    alwaysDirs = ['spol', 'particles', 'precip.basic', 'precip.hourly',
                  'precip.storm', 'particles/pdesc', 'rain', 'rain/basic',
                  'rain/hourly', 'rain/storm', 'sweepfiles', 'boundary']

    #
    # and these are the project-specific extra directories (usually
    # extra Zebra platforms)
    #
    extraDirs = ['ncgrids', 'radar_composite', 'goes_1km', 'goes_4km', 'p3', 
	'kingair', 'dc8', 'mesonet', 'particles8', 'particles8/pdesc',
	'refract_storm']

    #
    # Verify that we got no args
    #
    if len(sys.argv) != 1:
	print 'usage: %s ' % sys.argv[0]
	sys.exit(-1)

    #
    # Create a new IOP directory, named by the current date and time
    #
    iop = time.strftime('iops/iop_%Y_%m_%d_%H00', time.gmtime(time.time()))
    newDir = os.path.join(baseDir, iop)

    if os.path.exists(newDir):
	print 'ERROR - %s already exists!' % newDir
	sys.exit(-2)
    os.mkdir(newDir)

    allDirs = alwaysDirs + extraDirs
    for d in allDirs:
	os.mkdir(os.path.join(newDir, d))

    #
    # Make <baseDir>/<spolLink> point to the new IOP directory
    #
    os.chdir(baseDir)

    safeunlink(spolLink)
    os.symlink(iop, spolLink)

if __name__ == '__main__':
    main()


