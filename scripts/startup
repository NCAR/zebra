#!/bin/tcsh
#
# Get the whole mess going.
#
echo $0 started at `date`
set execdir = $0:h

#
# Make sure ZEBRA_MASTER is set
#
if (! $?ZEBRA_MASTER) then
    echo "${0}: You must set the ZEBRA_MASTER environment variable!"
    exit 1
endif

#
# See if some part of Zebra is running on ZEBRA_MASTER
#
@ new_zebra = (! { msg_ping $ZEBRA_MASTER } )

#
# Fire up Zebra with the datastore running on ZEBRA_MASTER 
# and the display on the local machine 
#
setenv XAPPLRESDIR /zebra/lib/resources
zstart -n -dshost $ZEBRA_MASTER -dsonly /ops/zebra
$execdir/newdisplay &

#
# Run some extra stuff if we're on the master machine and an
# instance of Archiver is not running
#
mstatus | fgrep Archiver >& /dev/null
@ need_extras = $status

if ( `hostname` == $ZEBRA_MASTER && $need_extras ) then

    set logdir = /ops/run

    set archiverlog = $logdir/arch.out
    rm -f $archiverlog	# AAAAARRRRGH!
    /zebra/bin/Archiver -f /dev/st0 -g +5-85 -time 60 \
		    -database /ops/run/ArcDB \
		    -tapelimit 10000000 \
		    -exclude spol >& $archiverlog  &
    sleep 2

    #
    # Start the rain and hydrometeor ID stuff
    #
    set rainlog = $logdir/rain.out
    set hyidlog = $logdir/hyid.out

    /bin/mv -f $rainlog $rainlog.save > /dev/null
    /ops/bin/startboth >& $rainlog
    /bin/mv -f $hyidlog $hyidlog.save > /dev/null
    /ops/bin/starthyid < /dev/null >& $hyidlog &

    # 
    # Start up building of selected sweepfile links
    #
    killall build_selected_links
    setenv PYTHONUNBUFFERED 1
    set bslog=/tmp/build_select.log
    rm -f $bslog
    /zebra/bin/build_selected_links >& $bslog &

endif
