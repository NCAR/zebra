/* -*- C -*-
 *
 * Development build parameters.  When processed, this file expects the
 * architecture symbols to be defined.  Defaults are chosen for the
 * Makefile configuration symbols according to architecture.  Only those
 * symbols which differ from their defaults (given in Project.tmpl) are
 * defined here.
 */

XCOMM -----------------------------------------------------------------------
XCOMM Zebra project auto-build parameters for development compilations
XCOMM $Id: Build.tmpl,v 1.13 1995-11-27 05:54:36 granger Exp $
XCOMM -----------------------------------------------------------------------

#ifndef UseInstalledZebra
# define UseInstalledZebra	NO
#endif
#ifndef BuildIngest
# define BuildIngest		NO
#endif
/*
 * For development, default to omitting xhelp.  To include xhelp, define
 * this to YES and define SUPPORT_XHELP in the AUTO_DEFINES.
 */
#ifndef BuildXHelp
# define BuildXHelp		NO
#endif

#ifndef UseGcc
# define UseGcc YES
#endif

/*
 * See if we're supposed to build RDSS in this tree also; default to NO
 */
#ifndef BuildRDSS
#define BuildRDSS NO
#endif

/*
 * Default to HDF on all architectures
 */
#ifndef HasHDF
/* # ifndef LinuxArchitecture */ /* alas, cannot yet compile HDF on linux */
#  define HasHDF YES
/* # else
#  define HasHDF NO
# endif /* ndef linux */
#endif /* ndef HasHDF */
#define HDFIncDir /usr/local/include/hdf

/*
 * Include map projections on systems which have it installed, but only
 * when we're using a compiler which supports ANSI prototypes (thanks
 * to projects.h).
 */
#ifndef MapProjections
# if UseGcc
#   define MapProjections YES
# else
#  if defined(SunArchitecture) && !defined(SVR4) && !defined(solaris)
#   define MapProjections NO /* SunOS 4 native cannot compile projects.h */
#  else
#   if defined(SGIArchitecture)
#    define MapProjections NO /* IRIX native cc cannot compile it */
#   else
#    define MapProjections YES
#   endif
#  endif
# endif
#endif

#if MapProjections
# define ProjLibDir /usr/local/lib
# define ProjIncDir /usr/local/include
#endif

/*
 * To get CVS ignore rules
 */
#define HasCvs YES
/* #define WantCvsIgnore NO */

/*
 * If a BaseDir is defined, use it to give defaults to BinDir and LibDir.
 * Otherwise BinDir and LibDir default to relative paths in Project.tmpl,
 * and BaseDir defaults to /zeb.
 */
#ifdef BaseDir
# ifndef BinDir
#  define BinDir BaseDir/bin
# endif
# ifndef LibDir
#  define LibDir BaseDir/lib
# endif
#endif

#if defined(SunArchitecture)

# define	BuildIngestScheduler	YES	/* SunOS/Solaris 	*/
# ifndef BuildDataUtilities
#  define	BuildDataUtilities	YES	/* SunOS/Solaris	*/
# endif
# if defined(SVR4) || defined(solaris) /* Solaris only */
#  define	BuildRadarIngest	YES	/* Solaris only		*/
#  define	BuildSLGrabber		NO
#  define	Build_TRMM_Rain		NO
# else /* SunOS only */
#  define	BuildRadarIngest	NO
#  define	BuildSLGrabber		YES	/* SunOS only		*/
#  define	Build_TRMM_Rain		YES	/* SunOS only		*/
# endif

#else /* all other architectures */

# define	BuildIngestScheduler	NO
# ifndef BuildDataUtilities
#  define	BuildDataUtilities	NO
# endif
# define	BuildRadarIngest	NO
# define	BuildSLGrabber		NO
# define	Build_TRMM_Rain		NO

#endif /* SunArchitecture */

# define	BuildClassIngest 	NO /* needs libsuds.a from RDSS tree */
# define	BuildPamIngest			NO
# define	BuildRealtimeDataStoreTools	YES

/*
 * Compile data manager if we have gcc
 */
#ifndef BuildDataManager
# if UseGcc
#  define	BuildDataManager		YES
# else
#  define	BuildDataManager		NO
# endif
#endif /* ndef BuildDataManager */

#ifdef SunArchitecture
# ifndef UseOpenWindows
#  define UseOpenWindows 	NO	
# endif
# define OpenWindowsVersion 	3
# define OpenWinHome		/usr/openwin
#else
# ifdef UseOpenWindows
#  undef UseOpenWindows
# endif
# define UseOpenWindows 	NO	
#endif

#define XSharedMemory YES

XCOMM --- Deciding C compiler and options

/*
 * Allow existence of a Static symbol to set our flags for a static
 * (e.g. binary distribution) build.
 */

#ifdef Static
# if UseGcc
#  define StaticFlag -static
# else /* guess */
#   define StaticFlag -Bstatic
# endif
# ifndef CDebugFlags
#  define CDebugFlags StaticFlag
# endif
#endif /* Static */   

#ifndef CDebugFlags
# define CDebugFlags -g
#endif

XCOMM --- Deciding X, RDSS and netCDF library directories

#if defined(HPArchitecture)
# define XLibDir /usr/contrib/mitX11R5/lib	/* contrib for HP */
# define XIncDir /usr/contrib/mitX11R5/include
#else
# if defined(SGIArchitecture)
  /* # define XLibDir /usr/lib */		/* leave it empty for SGI */
# else
#  if ! UseOpenWindows	/* otherwise use default in Project.tmpl */
#   if defined(SVR4Architecture)
#    define XIncDir /local/X11R6/include
#    define XLibDir /local/X11R6/lib
#   else
#    define XIncDir /local/X11R5/include
#    define XLibDir /local/X11R5/lib
#   endif
#  endif
# endif
#endif /* HPArchitecture */

#if !BuildRDSS
# define RDSSLibDir /usr/local/lib
#endif
#define NetCDFLibDir /usr/local/lib
#define NetCDFIncDir /usr/local/include

XCOMM --- Deciding FORTRAN library paths

#ifdef SunArchitecture
# ifndef SVR4Architecture /* sunos 4.1.3 */
#  ifndef FortMajorVersion
#   define FortMajorVersion 1
#  endif
#  if FortMajorVersion > 1
/*  SunOS 4 with gcc or cc and FORTRAN SC2.x */
#   define FortranLibraries \
     -L/usr/lang/SC2.0.1 -lF77 -lV77 -lM77 -lansi /usr/lang/SC2.0.1/values-Xa.o
/* SunOS 4 with acc and FORTRAN SC2.x */
/* # define FortranLibraries -L/usr/lang/SC2.0.1 -lF77 -lV77 -lM77 -lansi */
#  else	/* SC 1.0.1 */
#   define FortranLibraries -L/usr/lang/SC1.0.1 -lF77 -lV77
#  endif /* FortMajorVersion */
# else /* Solaris, C2 and C3.0. */
#  ifndef FortMajorVersion
#   define FortMajorVersion 3	/* default to C3.0.1 */
#  endif
#  if FortMajorVersion > 2
/* -lsunmath doesn't get linked into /opt/SUNWspro/lib
 * so it really does have to point explicitly at SC3.0...
 * And 3.0.1 requires M77 also.
 */
/*#   define FortranLibraries -L/opt/SUNWspro/SC3.0/lib -lF77 -lV77 -lsunmath*/
/*
 * Solaris, SC3.0.1, for some reason (for some programs) now requires M77
 */
#   define FortranLibraries -L/opt/SUNWspro/SC3.0.1/lib \
					-lF77 -lV77 -lM77 -lsunmath
#  else
#   define FortranLibraries -L/opt/SUNWspro/SC2.0.1 -lF77 -lV77
#  endif /* FortMajorVersion */
# endif /* SVR4Architecture */
#endif /* SunArchitecture */

#ifdef HPArchitecture
# define FortranLibraries -lU77 -lf -lisamstub
#endif

#ifdef SGIArchitecture
/* IRIX 5.x */
# define FortranLibraries -lF77 -lI77 -lU77 -lisam
#endif

#ifdef LinuxArchitecture
# define FortranCompiler g77
# define FortranLibraries -lf2c
#endif

XCOMM --- Finished with Build.tmpl
