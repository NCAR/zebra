/**/#-------------------------------------------------------------------------
/**/# Zeb project build parameters
/**/# $Id: Project.tmpl,v 1.1 1992-08-20 00:49:09 granger Exp $
/**/#-------------------------------------------------------------------------

/*****************************************************************************
 *                                                                           *
 *                            DEFAULT DEFINITONS                             *
 *                                                                           *
 * The following section contains defaults for things specific to the Zeb    *
 * installation.  These can overridden in the various ../imake/*.cf files,   *
 * and in the ./site.def and ./config.h files.  Usually the only file which  *
 * should be changed is config.h!  DO NOT MODIFY THIS FILE!!!		     *
 *                                                                           *
 ****************************************************************************/

#define ProjectZeb

/*
 * Include the original configuration file for Zeb
 */
#define MAKING_MAKEFILE
#include <config.h>

/* ------------------------------------------------------------------------------
 * Extra system-specific information needed by Zeb.  
 * The man stuff is not used presently, but it might be useful someday...
 */

#ifndef ManDirectoryRoot
#define ManDirectoryRoot /usr/man
#endif
#ifndef ManSuffix
#define ManSuffix	n		/* use just one tab or cpp will die */
#endif
#ifndef LibManSuffix
#define LibManSuffix	3		/* use just one tab or cpp will die */
#endif

#ifndef OpenWinHome
#define OpenWinHome /usr/openwin
#endif

#ifndef XSharedMemory			/* if the X server has the Shm extension */
#if HasShm
#define XSharedMemory YES
#else
#define XSharedMemory NO
#endif 
#endif

#ifndef ShmDefines			/* the defines to use X shared memory */
#if XSharedMemory
#define ShmDefines -DSHM
#else
#define ShmDefines /**/
#endif
#endif

#ifndef LibraryDefines
#define LibraryDefines StandardDefines
#endif

#ifndef HasWritev
#if defined(SunArchitecture)
#define HasWritev	YES
#else
#define HasWritev	NO
#endif
#endif /* ndef HasWritev */

/* ---------------------------------------------------------------------------
 * Zeb's Imake project definitions
 */

#ifndef UseInstalled
#define UseInstalled /* since makedepend is assumed installed */
#endif

#ifndef BuildIncRoot
#define BuildIncRoot $(TOP)/include
#endif
#ifndef BuildIncTop
#define BuildIncTop ..	/* Relative to $(TOP)/include */
#endif

#ifndef BaseDir
#define BaseDir /zeb
#endif

#ifndef BinDir
#define BinDir $(TOP)/bin
#endif

#ifndef LibDir
#define LibDir $(TOP)/lib
#endif

#ifndef ConfigDir
#define ConfigDir $(TOP)/config
#endif

#ifndef DependDir
#define DependDir $(UTILSRC)/makedepend
#endif

#ifndef InstallAppDefFiles
#define InstallAppDefFiles YES
#endif

#ifndef InstAppFlags
#define InstAppFlags -m 444
#endif

#ifndef XAppLoadDir
#define XAppLoadDir $(LIBDIR)/resources
#endif

#ifndef RemoveTargetProgramByMoving
#define RemoveTargetProgramByMoving NO
#endif

#ifndef ArAdd
#define ArAdd ar ruv
#endif

#ifndef UseCCMakeDepend
#define UseCCMakeDepend NO
#endif

/* ---------------------------------------------------------------------------
 * User-configurable build options.  These are just the defaults.  Most of the
 * choices will be made in config.h
 */

#ifndef UicCmd
#define UicCmd uic	/* Assumes uic in path */
#endif

#ifndef PamCfgLibrary
#define PamCfgLibrary LoaderLibPrefix -lunp
#endif

#ifndef NetCDFIncDir
#define NetCDFIncDir /usr/local/include
#endif

#ifndef NetCDFLibDir
#define NetCDFLibDir /usr/local/lib
#endif

#ifndef XIncDir
#define XIncDir /**/	/* assume X includes in std search path */
#define XIncludes /**/
#else
#ifndef XIncludes
#define XIncludes Concat(-I,XIncDir)
#endif
#endif

#ifndef UseOpenWindows
#define UseOpenWindows NO
#endif

#ifndef OpenWindowsVersion
#define OpenWindowsVersion 2
#endif

#ifndef BuildRealtimeDataStoreTools
#define BuildRealtimeDataStoreTools NO
#endif

#ifndef RT_DS_TOOLS
#define RT_DS_TOOLS BuildRealtimeDataStoreTools
#endif

#ifndef BuildIngest
#define BuildIngest NO
#endif
#ifndef BuildOptimizer
#define BuildOptimizer NO
#endif
#ifndef BuildClassIngest
#define BuildClassIngest YES
#endif
#ifndef BuildRadarLimits
#define BuildRadarLimits YES
#endif
#ifndef BuildSLGrabber
#define BuildSLGrabber YE
#endif
#ifndef BuildAircraftIngest
#define BuildAircraftIngest YES
#endif
#ifndef BuildFMIngest
#define BuildFMIngest YES
#endif
#ifndef BuildIngestScheduler
#define BuildIngestScheduler YES
#endif
#ifndef BuildLLPIngest
#define BuildLLPIngest YES
#endif
#ifndef BuildNatsIngest
#define BuildNatsIngest YES
#endif
#ifndef BuildNowradIngest
#define BuildNowradIngest YES
#endif
#ifndef BuildP3Ingest
#define BuildP3Ingest YES
#endif
#ifndef BuildPamIngest
#define BuildPamIngest YES
#endif
#ifndef BuildProfsIngest
#define BuildProfsIngest YES
#endif
#ifndef BuildRadarIngest
#define BuildRadarIngest YES
#endif
#ifndef BuildRsgIngest
#define BuildRsgIngest YES
#endif
#ifndef BuildSatelliteIngest
#define BuildSatelliteingest
#endif


/**/# -------------------------------------------------------------------------
/**/# Zeb make variables; these are coordinated with config.h
/**/# -------------------------------------------------------------------------

          PATHSEP = /			/* for building filenames */
           BINDIR = BinDir		/* programs */
          INCROOT = IncDir		/* base of where to put header files */

     BUILDINCROOT = BuildIncRoot	/* root of build include directory */
      BUILDINCDIR = $(BUILDINCROOT)	/* where headers put in include directory */
      BUILDINCTOP = BuildIncTop			/* top relative to BUILDINCDIR */

           INCDIR = IncDir		/* The build and install includes  */
           LIBDIR = LibDir		/* Zeb project library */
        CONFIGDIR = ConfigDir		/* build configuration information */
      XAPPLOADDIR = XAppLoadDir         /* Resource file installation dir */

     INSTAPPFLAGS = InstAppFlags

/* 
 * At the moment, this section sets the DEPEND command to an installed version,
 * while IMAKE and MKDIRHIER are set to the distribution locations
 */
            IMAKE = $(IMAKESRC)/imake
           DEPEND = makedepend		/* Assumes in path */
        MKDIRHIER = BourneShell $(SCRIPTSRC)/mkdirhier.sh
/****/

        CONFIGSRC = $(TOP)/config
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(CONFIGSRC)/scripts
           DOCSRC = $(TOP)/doc
         IMAKESRC = $(TOP)/imake
        DEPENDSRC = DependDir
   IMAKE_INCLUDES = -I$(NEWTOP)$(CONFIGSRC) -I$(NEWTOP)$(IMAKESRC)

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(NEWTOP)$(IMAKE) $(IMAKE_INCLUDES) $(IMAKE_DEFINES)

      OPENWINHOME = OpenWinHome
       RDSSINCDIR = RDSSIncDir
     NETCDFINCDIR = NetCDFIncDir
     NETCDFLIBDIR = NetCDFLibDir

     TOP_INCLUDES = -I$(BUILDINCDIR)
     RDSSINCLUDES = -I$(RDSSINCDIR)
        XINCLUDES = XIncludes
   CONFIGINCLUDES = 
   NETCDFINCLUDES = -I$(NETCDFINCDIR)

/* Project-wide include directories.  Local Imakefiles use the INCLUDES variable */
   EXTRA_INCLUDES = $(XINCLUDES) $(RDSSINCLUDES) \
		    $(NETCDFINCLUDES) $(CONFIGINCLUDES)

       SHMDEFINES = ShmDefines

          DEFINES = $(SHMDEFINES)

#ifndef CCompiler
#define CCompiler CcCmd
#endif
#ifndef CCOptions
#define CCOptions DefaultCCOptions
#endif
#ifndef CDebugFlags
#define CDebugFlags DefaultCDebugFlags
#endif
#ifndef FortOptions
#define FortOptions FortranFlags $(FDEBUGFLAGS)
#endif

               CC = CCompiler
        CCOPTIONS = CCOptions
      CDEBUGFLAGS = CDebugFlags

/*
 * Imake uses the variables FC, FDEBUGFLAGS, and FCFLAGS.
 * These are set to the common implicit variables F77, and FFLAGS.
 * If config.h does not define FortOptions and FortranCompiler,
 * then the Imake defines are used (see above)
 */
          FCFLAGS = FortOptions
              F77 = $(FC)
           FFLAGS = $(FCFLAGS)

              UIC = UicCmd
            ARADD = ArAdd

       RDSSLIBDIR = RDSSLibDir

#ifndef ZebLibrary
#define ZebLibrary LoaderLibPrefix $(LIBDIR)/libzeb.a
#endif
#ifndef NetCDFLibrary
#define NetCDFLibrary -L$(NETCDFLIBDIR) LoaderLibPrefix -lnetcdf
#endif
#ifndef FortranLibraries
#define FortranLibraries LoaderLibPrefix -lF77	/* just a guess */
#endif
#ifndef RDSSLibrary
#define RDSSLibrary -L$(RDSSLIBDIR) LoaderLibPrefix -lrdss
#endif
#ifndef SudsLibrary
#define SudsLibrary -L$(RDSSLIBDIR) LoaderLibPrefix -lsuds
#endif
#ifndef XLibraries
#define XLibraries \
  -L$(XLIBDIR) LoaderLibPrefix -lXaw \
  LoaderLibPrefix -lXmu \
  LoaderLibPrefix -lXt \
  LoaderLibPrefix -lXext \
  LoaderLibPrefix -lX11
#endif
#ifndef TermCapLibrary
#define TermCapLibrary LoaderLibPrefix -ltermcap
#endif
#ifndef MathLibrary
#define MathLibrary LoaderLibPrefix -lm
#endif
#ifndef SystemLibraries
#define SystemLibraries $(MATHLIB) $(TERMCAPLIB)
#endif

           LIBZEB = ZebLibrary
        LIBNETCDF = NetCDFLibrary
            FLIBS = FortranLibraries
          LIBRDSS = RDSSLibrary
          LIBSUDS = SudsLibrary
           LIBUNP = PamCfgLibrary
            XLIBS = XLibraries
          MATHLIB = MathLibrary
       TERMCAPLIB = TermCapLibrary
    SYS_LIBRARIES = SystemLibraries

          DEPLIBS = $(LIBZEB)

/*
 * Rules specific to the Zeb project.  Some of these override rules
 * in Imake.rules, which is included after the project template (this file).
 */
#include <Zeb.rules>

