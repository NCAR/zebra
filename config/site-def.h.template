/*
 * RDSS Libraries configuration parameters.  Edit as needed.  Consult the
 * RDSS RDSS Libraries Package Installation Manual for more information.
 *
 * -------------------------------
 * In this file you can override any of the default configuration
 * parameters.  All of the parameters are definition directives for
 * the C pre-processor, of the form:

#define Symbol <definition>

 * To set a symbol to True or Yes or On, use

#define Symbol YES
  
 * To turn a parameter off or disable an option, use

#define Symbol NO

 * Some symbols are not YES or NO but actually directory names or
 * commands.  If a Symbol is not defined in this file, it will be 
 * assigned a default definition in the Libraries template file, Project.tmpl, 
 * in this directory.  Most of the defaults are mentioned in this
 * file and there are instructions for how to change many of the
 * configuration parameters.  However, many more parameters exist.
 * If you think it necessary to change some other parameters, such
 * as when porting to a new platform, look in the Project.tmpl file 
 * for all of the available parameters and their defaults.  When in doubt 
 * try the default first and then adjust it if it doesn't work.
 * 
 */

/*============================== Don't change anything in this section ==*/
/*///////////////////////////////////////////////////////////////////////*/

# ifdef MAKING_MAKEFILE
/**/# -----------------------------------------------------------------------
/**/# Definitions from site-def.h included here.  The definitions here override
/**/# the defaults in Project.tmpl.  
/**/# $Id: site-def.h.template,v 1.29 1997-03-11 16:14:57 case Exp $
/**/# -----------------------------------------------------------------------
# endif

# ifndef YES
#	define YES 1
# endif
# ifndef NO
#	define NO 0
# endif

/*///////////////////////////////////////////////////////////////////////*/
/*=======================================================================*/


/*=======================================================================
 * CHECK THE FOLLOWING DEFINITIONS:
 *
 * This section defines the directories in which RDSS Libraries files live.
 * These are set-up for the default Libraries installation, in which the
 * top directory (RDSSHome) for the Libraries is /rdss, and the bin, lib and
 * include directories are /rdss/bin, /rdss/lib and /rdss/include.  If you 
 * would like to change these, edit the lines below.
 * 
 * PLEASE NOTE:
 * Files will be installed into RDSSLibDir, RDSSBinDir and RDSSIncludeDir
 * directories.  If you wish to preserve files already stored in these
 * directories, either move the directories BEFORE building the Libraries or 
 * specify different directory paths for the symbols below.  If you wish to
 * overwrite a previous version, you might as well completely erase the
 * contents of RDSSBinDir so that programs which are no longer used are not
 * left taking up space.
 *
 */

# ifdef MAKING_MAKEFILE	 	

# define RDSSHome /rdss
# define RDSSIncDir RDSSHome/include
# define RDSSLibDir RDSSHome/lib
# define RDSSBinDir RDSSHome/bin

# endif /* MAKING_MAKEFILE */




/*========================================================================
 * WINDOWING OPTIONS
 * -------------------
 *
 * In the following section, you can override any of the configuration
 * defaults.  In general, here you choose whether you want to compile with
 * MIT's X Windows, Sun's OpenWindows or Sunview.
 *
 * By default, the configuration will link with MIT X11 X libraries in
 * standard library directories.  You can link with MIT's X and still use
 * most software under OpenWindows, and vice versa.  The Libraries must know 
 * if they are being linked with OpenWindows, however, because the build must
 * make adjustments in order to link properly.  
 *
 */
# ifdef MAKING_MAKEFILE

/*
 * If you don't have the MIT X11 distribution, set UseXWindows to NO.
 * If you have X11 and your X11 libraries aren't in /usr/lib, edit define
 * XLibDir with the proper path.
 *
 * Edit XIncDir only if your X11 include directory is not in /usr/include.
 * Since /usr/include is automatically searched during the compile process,
 * XInclude is left blank here on purpose.  If you must edit this path,
 * insert a -I before the path name.
 *
 *    Example:
 *        Your X11 include directory is in: /usr/local/include.
 *        Edit "define XIncDir" to read:
 *        #       define XIncDir -I/usr/local/include
 *
 * Either UseXWindows or UseOpenWin should be set to YES to get X windows
 * support (not both).  OpenWindows users should note that Version 3.0 or higher is needed 
 * by some programs (notably Zeb) to get full windows support.  If you have an earlier
 * OpenWindows version, set #define OldOpenWin to YES below. 
 *
 * For Zeb users:  to compile Zeb exclusively with OpenWindows, you
 * must have OpenWindows 3.0 or higher, and RDSS must be compiled with
 * UseOpenWindows defined as YES and OldOpenWin defined as NO.
 *
 * For Solo users: X11R5 is required for all installations.  OpenWindows
 * versions running on SunOS 4.1.x will not work because they are based on
 * X11R4.
 *
 * If in doubt about the compatibility of your window system, consult the individual software
 * requirements or one of the contact names listed in the RDSS Libraries Installation Guide.   
 */

# define UseXWindows YES 

# if UseXWindows
#       define XLibrary -lX11
#       define XLibDir /usr/lib 
#       define XIncDir 
# endif

/*
 * If your release of X is MIT X11 Release 3 or older, set this to YES.
 */
# define OldX11 NO

/*
 * If you use OpenWindows, set UseOpenWin to YES.
 *
 * If your version of OpenWindows is older than OpenWindows 3.0, set
 * OldOpenWin to YES.
 */
# define UseOpenWindows NO 
# define OldOpenWin     NO 

/*
 * You can change the location of OpenWindow's home directory here:
 */
# define OpenWinHome /usr/openwin

/*
 * If you wish to use Sunview, set this to YES and
 * edit the graphdev.h file.  Please note that most RDP software will not
 * support Sunview; check the respective installation manuals for
 * compatibility.  
 */
# define UseSunview NO 


/*========================================================================
 * COMPILATION OPTIONS
 * -------------------
 *
 * Decide on a compiler.  Choices are:
 *     gcc - GNU C Compiler
 *     cc  - Sun's bundled C Compiler
 *     acc - Sun's ANSI C Compiler
 *
 * To use gcc, set UseGcc to YES and define CCompiler as gcc.  Otherwise,
 * set UseGcc to NO and define CCompiler as cc or acc.
 *
 */

# define UseGcc NO

# define CCompiler cc

/*
 * This section defines a C++ compiler.  It is currently not used by the
 * RDSS Libraries or any software other than Zeb, which uses its own
 * configuration file. Edit this line only if you are modifying source
 * code at your site and are including C++ routines  If you defined UseGcc
 * to YES above, g++ will be used for the C++ compiler.  Otherwise the
 * default is CC.  To define a different C++ compiler, define
 * CccCompiler to the name of the compiler.  If the compiler requires
 * any special library options, define them in CccLibs.  The C debug
 * flags and options (defined below) will be passed to the C++
 * compiler as well.  Options specific to the C++ compiler should
 * be defined in CccOptions.
 */
#define CccOptions

/*
 * To set debugging flags for the FORTRAN and C compilers' command
 * lines, define the symbols CDebugFlags and FortDebugFlags to -g.
 * The default is no debugging.  
 *
 */
# define CDebugFlags 
# define FortDebugFlags 

/*
 * To change other compiler command line options, such as required by your
 * compiler (floating point stuff, etc.), or optimization flags, define
 * CCOptions and FortOptions.  The default is optimization, -O.  Note that
 * some compilers will not combine the -g -O options while others will. 
 * If you are not sure how your compiler treats the -g -O options and wish
 * to debug source code, the safest approach to is set DebugFlags above
 * and remove optimization (-O below).
 *
 * SGI users should also turn optimization off by removing the -O flags
 * from the lines below.  For some still unknown reason, using the -O option
 * with the SGI cc compiler causes unpleasant side effects with some
 * graphics routines. 
 *  
 */

# define CCOptions -O   
# define FortOptions -O 


/*========================================================================
 * OTHER OPTIONS
 * -------------------

 * If you have the netCDF package and want to use it, some software
 * (i.e. robot and suds) can take advantage of it.  Set this to YES
 * and edit NetCDF_DESTDIR with the name of the top level directory
 * containing the lib/netcdf libraries and include/netcdf.h files,
 * usually /usr/local.
 *
 * Note that Zeb requires NetCDF, so edit these if you will be installing
 * Zeb.
 *
 */
# define UseNetCDF NO 

# if UseNetCDF
#       define NetCDFIncDir /usr/local/include
#       define NetCDFLibDir /usr/local/lib
# endif


/*========================================================================
 * SYSTEM LIBRARY PATHS
 * -------------------
 *
 * Define compiler and other paths here.  
 *
 */

/*
 * Fortran library path and definition.  The default is for SunOS 4 and 
 * FORTRAN SC1.0.1.  Sun users should modify their paths accordingly.
 * However, Sun 4.1.3 users compiling with the SC2.0.1 compiler should
 * change the lines to read:
 *
 *        # define FortranPath /usr/lang/SC2.0.1
 *        # define FortranLibraries -lF77 -lM77
 *
 * SGI users should comment out the Fortran Path and 
 * edit FortranLibraries:
 *
 */	  /*# define FortranPath*/
/*        # define FortranLibraries -lF77 -lI77 -lisam
 *
 * HP-UX users should edit the line to read:
 *
 */	  /*# define FortranPath*/
/*        # define FortranLibraries -lf -lisamstub
 *  
 */  

# define FortranPath /usr/lang/SC1.0.1
# define FortranLibraries -lF77



/*
 * The math library to use.  Depending upon your FORTRAN compiler (SC1.0
 * in particular), this may need to be explicitly defined as the compiler
 * math library.  Consult Known Problems in the Installation Manual for
 * more details. 
 */

# define MathLibrary -lm


/*
 * The terminal library to use.  This will normally not need modification;
 * however, Solaris 2.1 users should modify this to read:
 *
 *        # define TermcapLibrary -L/usr/ccs/lib -ltermcap
 *
 * Linux users must have either the curses or termcap development libraries
 * installed.  Check /usr/lib for libtermcap.a or libncurses.a.  If neither 
 * file exists, one or the other must be installed from your linux 
 * distribution media.  Consult your linux documentation for directions to
 * install additional packages to your system.  If /usr/lib/libtermcap.a 
 * exists, do not edit TermcapLibrary below.  If you don't have libtermcap.a
 * but do have libncurses.a, modify the line below to read:
 *  
 *	  # define TermcapLibrary -lncurses
 */

# define TermcapLibrary -ltermcap



/*========================================================================
 * PROGRAM SPECIFIC INFORMATION
 * -------------------
 *
 * Consult each package's installation docs for assistance.
 */

/*
 * RDSS Radar Package specifics.  Ignore if you are not installing
 * the RDSS Radar software
 */

/*
 * Byte ordering flag.  Do not change this unless you are installing
 * SOLO on a linux machine or attempting a port to another system
 * which has "little endian" byte ordering.
 *
 */

# define EndianFlag -DBIG_ENDIAN

/*
 * The location for RADAR include files (for Perusal, Editor, Reorder, ToDisk).
 * This should not need editing.
 */
# define RADARInclude RDSSHome/radar/h

/*
 * Sun Solaris 2.0 and higher now differentiates between BSD and System V
 * devices, and the behavior is different for each.  If you are using
 * Solaris 2.0 (Sun OS 5.0) or higher and wish to use a BSD device
 * (specified as a 'b' in your device name as in "/dev/rmt/0bn") for your
 * Exabyte or 9-track device, then set UseSystemVDev to NO.  The software
 * will default to System V devices.  If you are not using Solaris 2.0 or
 * higher, you can ignore this definition.  See your RDSS Radar documentation
 * for more details.
 */


# define UseSystemVDev YES


/*
 * If you are installing Robot, set these paths for the default
 * ROBOT database.  See Robot installation instructions.
 */

# define DefDBDir \"/data/ppf\"
# define DefDBType \"cmf\"
# define DefDBName \"cmf\"


/*
 * If you are installing Solo and REORDER and wish to add the Dorade 
 * capability to REORDER, set this to yes.  Solo must be installed before
 * REORDER if you use this option.
 */

# define BuildDoradeReorder NO


/*
 * Solo/Dorade include path.  Ignore if you are not installing Solo.
 */

# define SOLOInclude RDSSHome/solo/include 
# define SOLOBinDir RDSSHome/bin
# define SOLOLibDir RDSSHome/lib



/*========================================================================*/
# endif /* MAKING_MAKEFILE */








