/**/#-------------------------------------------------------------------------
/**/# RDSS Libraries project build parameters
/**/# $Id: Project.tmpl,v 1.1 1993-05-12 15:02:59 case Exp $
/**/#-------------------------------------------------------------------------

/*****************************************************************************
 *                                                                           *
 *                            DEFAULT DEFINITONS                             *
 *                                                                           *
 * The following section contains defaults for things specific to the        *
 * Libraries installation.  These can overridden in the various              * 
 * ../imake/*.cf files, and in the ./site.def and ./site-def.h files.        *
 * Usually the only file which should be changed is site-def.h.              * 
 * DO NOT MODIFY THIS FILE!		     *
 *                                                                           *
 ****************************************************************************/

#define ProjectRDSSLibs

/*
 * Include the original configuration file for RDSS Libraries
 */
#define MAKING_MAKEFILE 
#include <site-def.h>

/* ------------------------------------------------------------------------------
 * Extra system-specific information needed by RDSS Libraries  
 * The man stuff is not used presently, but it might be useful someday...
/////////////////////////////////////////////////////////////////////////////////*/

#ifndef ManDirectoryRoot
#define ManDirectoryRoot /usr/man
#endif
#ifndef ManSuffix
#define ManSuffix	n		/* use just one tab or cpp will die */
#endif
#ifndef LibManSuffix
#define LibManSuffix	3		/* use just one tab or cpp will die */
#endif

#ifndef OpenWinHome
#define OpenWinHome /usr/openwin
#endif

#ifndef LibraryDefines
#define LibraryDefines StandardDefines
#endif

#ifndef HasWritev
#if defined(SunArchitecture)
#define HasWritev	YES
#else
#define HasWritev	NO
#endif
#endif /* ndef HasWritev */

/* ---------------------------------------------------------------------------
 * RDSS Libraries Imake project definitions
//////////////////////////////////////////////////////////////////////////////*/

#ifndef UseInstalled
#define UseInstalled 
#endif

#ifndef BuildIncRoot
#define BuildIncRoot $(TOP)/include
#endif
#ifndef BuildIncTop
#define BuildIncTop ..	/* Relative to $(TOP)/include */
#endif

#ifndef ConfigDir
#define ConfigDir $(TOP)/config
#endif

#ifndef DependDir
#define DependDir $(UTILSRC)/makedepend
#endif

#ifndef RemoveTargetProgramByMoving
#define RemoveTargetProgramByMoving NO
#endif

#ifndef ArAdd
#define ArAdd ar ruv
#endif

#ifndef UseCCMakeDepend
#define UseCCMakeDepend NO
#endif

#ifndef UicCmd
#define UicCmd uic	/* Assumes uic in path */
#endif



/* ---------------------------------------------------------------------------
 * User-configurable build settings.  These are just the defaults.  Most of the
 * choices will be made in site-def.h
//////////////////////////////////////////////////////////////////////////////*/

#ifndef RDSSHome
#define RDSSHome /rdss
#endif

#ifndef RDSSBinDir
#define RDSSBinDir $(TOP)/bin
#endif

#ifndef RDSSLibDir
#define RDSSLibDir $(TOP)/lib
#endif

#ifndef UseOpenWindows
#define UseOpenWindows NO
#endif

#ifndef OldOpenWin
#define OldOpenWin NO
#endif

#ifndef UseSunview
#define UseSunview NO
#endif

#ifndef UseXWindows
#define UseXWindows YES
#endif

#ifndef Old_X11
#define Old_X11 NO
#endif

#ifndef UseNetCDF
#define UseNetCDF NO
#endif

#ifndef HaveMakeDepend
#define HaveMakeDepend NO
#endif


/*//////////////////////////////////////////////////////// Includes ///////////*/
/*-----------------------------------------------------------------------------*/
/* If no include directory has been defined, the default will just omit an     */
/* include option altogether.  An include option could still be specified at   */
/* run-time by using something like 'make NETCDFINCLUDES=-I/netcdf'	       */
/*-----------------------------------------------------------------------------*/

#ifndef UseNetCDF
#define UseNetCDF NO
#endif

#if UseNetCDF
#   define NetCDFIncludes -I$(NETCDFINCDIR)
#else
#   define NetCDFIncludes  /* nothing */
#endif

/*
 * For RDSS, the default include directory will be RDSSHome/include
 */
#ifndef RDSSIncDir
#   define RDSSIncDir $(RDSSDIR)/include
#   ifndef RDSSIncludes
#      define RDSSIncludes -I$(RDSSINCDIR)
#   endif
#else
#   ifndef RDSSIncludes
#      define RDSSIncludes -I$(RDSSINCDIR)
#   endif
#endif

/*
 * Get the X includes right
 */

#if (UseOpenWindows && !UseXWindows)
#define XIncDir -I$(OPENWINHOME)/include
#endif

#ifndef XIncDir
#define XIncDir          /* nothing - overidden in site-def.h if need be */
#endif


/*///////////////////////////////////////////////////// Libraries //////////////*/
/*------------------------------------------------------------------------------*/

#ifndef RDSSGraphLib
#define RDSSGraphLib LoaderLibPrefix $(LIBDIR)/librdssgraph.a
#endif

#ifndef RDSSUiLib
#define RDSSUiLib LoaderLibPrefix $(LIBDIR)/librdssui.a
#endif

#ifndef RDSSUtilLib
#define RDSSUtilLib LoaderLibPrefix $(LIBDIR)/librdssutil.a
#endif

#ifndef RDSSLibDir
#   define RDSSLibDir /**/
#   ifndef RDSSLibrary
#      define RDSSLibrary LoaderLibPrefix -lrdss
#   endif
#else
#   ifndef RDSSLibrary
#      define RDSSLibrary -L$(RDSSLIBDIR) LoaderLibPrefix -lrdss
#   endif
#endif

#ifndef NetCDFLibDir
#   define NetCDFLibDir /**/
#   ifndef NetCDFLibrary
#      define NetCDFLibrary LoaderLibPrefix -lnetcdf
#   endif
#else
#   ifndef NetCDFLibrary
#      define NetCDFLibrary -L$(NETCDFLIBDIR) LoaderLibPrefix -lnetcdf
#   endif
#endif

#ifndef XLibDir
#   if UseOpenWindows
#      define XLibDir $(OPENWINHOME)/lib
#   else 
#      define XLibDir  /* Nothing -- overridden in site-def.h if needed */
#   endif
#endif


#ifndef XLibraries
#  if (UseXWindows)
#    define XLibraries -L$(XLIBDIR) LoaderLibPrefix -lXaw LoaderLibPrefix -lXt LoaderLibPrefix -lXmu LoaderLibPrefix -lXext LoaderLibPrefix -lX11
#  elif (UseOpenWindows && !OldOpenWin)
   /*libXmu must be statically linked else symbols will be missed */
#    define XLibraries -L$(XLIBDIR) LoaderLibPrefix -lXaw $(OPENWINHOME)/lib/libXmu.a -L$(XLIBDIR) LoaderLibPrefix -lXt  LoaderLibPrefix -lXext LoaderLibPrefix -lX11
#else
#    define XLibraries   /* Nothing */
#  endif
#endif /* ndef Xlibraries */


#ifndef XLib
# if (UseXWindows || UseOpenWindows)
#   define XLib -L$(XLIBDIR) LoaderLibPrefix -lX11
# else
#   define XLib   /* Nothing */
# endif
#endif /* ndef XLib */


#ifndef FortranLibraries
#define FortranLibraries LoaderLibPrefix -lF77	/* just a guess */
#endif

#ifndef TermcapLibrary
#define TermcapLibrary LoaderLibPrefix -ltermcap
#endif

#ifndef MathLibrary
#define MathLibrary LoaderLibPrefix -lm
#endif

#ifndef SystemLibraries
#define SystemLibraries $(MATHLIB) $(TERMCAPLIB)
#endif

#if UseSunview
#define SunviewLibs LoaderLibPrefix -lsuntool -lsunwindow -lpixrect
#else
#define SunviewLibs      /* Nothing */
#endif


/*
 * Set up flags used by individual Makefiles as needed
 */

/*
 * Endian Flag -- For portability
 */
#ifndef EndianFlag
#define EndianFlag -DBIG_ENDIAN
#endif

#if UseNetCDF
#   define NetCDFFlag -DNETCDF
#else
#   define NetCDFFlag    /* Nothing */
#endif


# ifndef XWindowsFlag
#    if (UseXWindows)
#       define XWindowsFlag -DXSUPPORT
#    elif (UseOpenWindows && !OldOpenWin)
#       define XWindowsFlag -DXSUPPORT
#    else
#       define XWindowsFlag   /* Nothing */
#    endif
# endif
 
/*
 * Figure out RGB color database.
 *
 */
# if (UseOpenWindows && !UseXWindows)
# define ColorDB \"$(OPENWINHOME)/lib/rgb.txt\"
# elif (UseXWindows)
# define ColorDB \"$(XLIBDIR)/X11/rgb.txt\"
# else
# define ColorDB \"$(TOP)/graphics/rgb.txt\"
# endif



/*/////////////////////////////////////////////////// Compiler options /////////*/
/*------------------------------------------------------------------------------*/
#ifndef UseGcc
#define UseGcc NO	/* we'll have to assume they don't have it */
#endif
#ifndef CCompiler
#define CCompiler CcCmd /* CcCmd is the default compiler set in Imake.tmpl */
#endif
#ifndef DefaultCcc
#define DefaultCcc CC /* this could be set in a system's .cf or site.def 
                         file */
                      /* this is a reasonable default for Sun's */
#endif
#ifndef CccCompiler /* C++ compiler */
#if UseGcc
#define CccCompiler g++
#else
#define CccCompiler DefaultCcc
#endif
#endif /* CccCompiler */
#ifndef CccOptions
#define CccOptions	/* as nothing */
#endif
#ifndef CccLibs
#if UseGcc
#define CccLibs -lg++
#else
#define CccLibs /* who knows ? */
#endif
#endif /* CccLibs */
#ifndef CCOptions
#define CCOptions DefaultCCOptions
#endif
#ifndef CCStaticOption
#ifdef UseGcc
#define CCStaticOption -static
#else
#define CCStaticOption -Bstatic
#endif
#endif /* CCStaticOption */

#ifndef CDebugFlags
#define CDebugFlags DefaultCDebugFlags
#endif
#ifndef FortDebugFlags
#define FortDebugFlags /* none */
#endif
#ifndef FortOptions
#define FortOptions -O
#endif

/*/////////////////////////////////////// Defaults for build options /////////*/
/*----------------------------------------------------------------------------*/
#if HaveMakeDepend
#define BuildMakedepend NO
#else
#define BuildMakedepend YES
#endif



/**/# ------------------------------------------------------------------------------
/**/# RDSS Libraries make variables; these are coordinated with site-def.h and the above defaults
/**/# ------------------------------------------------------------------------------

          PATHSEP = /			/* for building filenames */

     BUILDINCROOT = RDSSIncDir  	/* root of build include directory */
      BUILDINCDIR = $(BUILDINCROOT)	/* where headers put in inc directory */
      BUILDINCTOP = BuildIncTop		/* top relative to BUILDINCDIR */

/*
 * General directory locations
 */
           BINDIR = RDSSBinDir		/* programs */
          INCROOT = RDSSIncDir		/* base of where to put header files */
           INCDIR = RDSSIncDir		/* The build and install includes  */
           LIBDIR = RDSSLibDir		/* RDSS Libraries library directory */
          DESTDIR = 
        CONFIGDIR = ConfigDir		/* build configuration information */
          RDSSDIR = RDSSHome		/* Top of RDSS installation */
      OPENWINHOME = OpenWinHome

/* 
 * At the moment, this section sets the DEPEND command to an installed version,
 * while IMAKE and MKDIRHIER are set to the distributed locations
 */
            IMAKE = $(IMAKESRC)/imake
           DEPEND = makedepend		/* Assumes in path */
        MKDIRHIER = BourneShell $(SCRIPTSRC)/mkdirhier.sh

        CONFIGSRC = $(TOP)/config
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(CONFIGSRC)/scripts
           DOCSRC = $(TOP)/doc
         IMAKESRC = $(TOP)/imake
    MAKEDEPENDSRC = $(TOP)/Makedepend
        DEPENDSRC = DependDir
   IMAKE_INCLUDES = -I$(NEWTOP)$(CONFIGSRC) -I$(NEWTOP)$(IMAKESRC)

         IRULESRC = $(CONFIGDIR)

   MAKEDEPEND_CMD = cd $(MAKEDEPENDSRC); $(RM) Makefile.bak; $(MV) Makefile Makefile.bak; $(MAKE) $(MFLAGS) -f Makefile.bak Makefile; $(MAKE) $(MFLAGS) Makefiles; $(MAKE) $(MFLAGS) clean; $(MAKE) $(MFLAGS) $(WORLDOPTS) install; $(MAKE) $(MFLAGS) depend
        IMAKE_CMD = $(NEWTOP)$(IMAKE) $(IMAKE_INCLUDES) $(IMAKE_DEFINES)
     ICONFIGFILES = $(CONFIGSRC)/Project.tmpl $(CONFIGSRC)/RDSSLib.rules \
                    $(CONFIGSRC)/site-def.h $(IMAKESRC)/Imake.tmpl \
                    $(IMAKESRC)/site.def $(IMAKESRC)/Imake.rules

/*
 * Include directories
 */
       RDSSINCDIR = RDSSIncDir
     NETCDFINCDIR = NetCDFIncDir

/*
 * Directory include options; only the TOP_INCLUDES option will always exist
 * on the command line.  The others, except for RDSSIncludes, are empty by default.
 */
     TOP_INCLUDES = -I$(BUILDINCDIR)
     RDSSINCLUDES = RDSSIncludes
        XINCLUDES = XIncDir
   NETCDFINCLUDES = NetCDFIncludes
   CONFIGINCLUDES =

/* 
 * Project-wide include directories.  Local Imakefiles use the INCLUDES variable
 */
   EXTRA_INCLUDES = 
		  
/*
 * Project-wide defines. Local Imakefiles should use the EXTRA_DEFINES variable
 */
	  DEFINES = -DUNIX


/*
 * Local flags.  Imakefiles include them as needed.
 */
     XWINDOWSFLAG = XWindowsFlag 
	  COLORDB = ColorDB
       ENDIANFLAG = EndianFlag
       NETCDFFLAG = NetCDFFlag

/*
 * Library directories
 */
       RDSSLIBDIR = RDSSLibDir
     NETCDFLIBDIR = NetCDFLibDir
          XLIBDIR = XLibDir
      SUNVIEWLIBS = SunviewLibs

/*
 * Library link command-line options.  These make variables should include
 * any -L options and the -l prefix to library names, or they can explicitly
 * name the archive file.
 */

     LIBRDSSGRAPH = RDSSGraphLib
	LIBRDSSUI = RDSSUiLib
      LIBRDSSUTIL = RDSSUtilLib
          LIBRDSS = RDSSLib
        LIBNETCDF = NetCDFLibrary
            FLIBS = FortranLibraries
            XLIBS = XLibraries
	     XLIB = XLib
          MATHLIB = MathLibrary
       TERMCAPLIB = TermcapLibrary
    SYS_LIBRARIES = SystemLibraries

          DEPLIBS = 

/*
 * Compiler commands and options
 */
               CC = CCompiler
              C++ = CccCompiler
      CDEBUGFLAGS = CDebugFlags
         C++FLAGS = CccOptions $(CFLAGS)
          C++LIBS = CccLibs /* variable should be explicitly included in 	*/
                            /* targets for c++ progs 				*/
/*
 * Only set the Fortran compiler explicitly if a value has been defined.
 * Otherwise we'll default to Make's implicit rule value
 */
#ifdef FortranCompiler
              F77 = FortranCompiler
               FC = $(F77)
#endif
      FORTOPTIONS = FortOptions
   FORTDEBUGFLAGS = FortDebugFlags
           FFLAGS = $(FORTOPTIONS) $(FORTDEBUGFLAGS)
          FCFLAGS = $(FFLAGS)

              UIC = UicCmd
            ARADD = ArAdd
     INSTAPPFLAGS = InstAppFlags

/*
 * Our own implicit rules, such as for C++ files (.cc extension)
 */
.cc.o:
	$(C++) $(C++FLAGS) -c $<

/*
 * Rules specific to the RDSS Libraries project.  Some of these override rules
 * in Imake.rules, which is included after the project template (this file).
 */
#include <RDSSLib.rules>

