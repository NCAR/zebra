# $Id: Makefile.ini,v 1.10 1995-05-25 08:27:01 granger Exp $
#
# Bootstrap Makefile for Zebra distribution
#

       SHELL = /bin/sh
          RM = rm -f
          MV = mv
#       MAKE = make	-- Obstructs recursive $(MAKE)
   WORLDOPTS = -k
         TOP = .
 CURRENT_DIR = .
   CONFIGSRC = $(TOP)/config
    IMAKESRC = $(CONFIGSRC)/imake
    IRULESRC = $(CONFIGSRC)/cf
  PROJECTSRC = $(CONFIGSRC)/project
       IMAKE = $(IMAKESRC)/imake
  IMAKE_INCS = -I$(NEWTOP)$(PROJECTSRC) -I$(NEWTOP)$(IRULESRC)
AUTO_DEFINES =
   IMAKE_CMD = $(NEWTOP)$(IMAKE) $(IMAKE_INCS) $(IMAKE_DEFINES) \
               $(AUTO_DEFINES) -DAutoDefines="$(AUTO_DEFINES)"

# Thanks to HP weirdness we need to override optimization flag in imake
# Hopefully it builds correctly when we later build from the Imakefile

       FLAGS = $(MFLAGS) -f Makefile.ini INCLUDES="-I../project" \
	       CC=$(CC) BOOTSTRAPCFLAGS="$(BOOTSTRAPCFLAGS)" \
	       CDEBUGFLAGS=

all:
	@echo "Please read the installation manual for instructions."
	@echo "You should be using make World to begin the installation."
	@echo "Do not name your log file make.log or it will be deleted."
	@echo "Check the configuration parameters in the config directory."
	@echo " "
	@echo "If the top-level Makefile gets corrupted, copy Makefile.ini
	@echo "to Makefile and try again."

World:
	@echo ""
	@echo "Building the Zebra distribution"
	@echo ""
	@echo "####################################################"
	@echo "#   Have you read the installation instructions?   #"
	@echo "####################################################"
	@echo ""
	@date
	@echo ""
	cd $(IMAKESRC); $(MAKE) $(FLAGS) clean; $(MAKE) $(FLAGS)
	-$(RM) Makefile.bak; $(MV) Makefile Makefile.bak
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)
	$(MAKE) $(MFLAGS) Makefiles
	$(MAKE) $(MFLAGS) clean
	$(MAKE) $(MFLAGS) includes
	$(MAKE) $(MFLAGS) depend
	$(MAKE) $(MFLAGS) $(WORLDOPTS) install
	@echo ""
	@date
	@echo ""
	@echo "Full build of Zebra complete"
	@echo ""

Makefile:
	cd $(IMAKESRC); $(MAKE) $(FLAGS) clean; $(MAKE) $(FLAGS)
	-$(RM) Makefile.bak; $(MV) Makefile Makefile.bak
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)
