# $Id: Makefile.ini,v 1.13 1996-11-19 06:23:53 granger Exp $
#
# Bootstrap Makefile for Zebra distribution
#

       SHELL = /bin/sh
          RM = rm -f
          MV = mv
#       MAKE = make	-- Obstructs recursive $(MAKE)
   WORLDOPTS = -k
         TOP = .
 CURRENT_DIR = .
   CONFIGSRC = $(TOP)/config
    IMAKESRC = $(CONFIGSRC)/imake
    IRULESRC = $(CONFIGSRC)/cf
  PROJECTSRC = $(CONFIGSRC)/project
       IMAKE = $(IMAKESRC)/imake
  IMAKE_INCS = -I$(NEWTOP)$(PROJECTSRC) -I$(NEWTOP)$(IRULESRC)
AUTO_DEFINES =
   IMAKE_CMD = $(NEWTOP)$(IMAKE) $(IMAKE_INCS) $(IMAKE_DEFINES) \
               $(AUTO_DEFINES) -DAutoDefines="$(AUTO_DEFINES)"

# Thanks to HP weirdness we need to override optimization flag in imake
# Hopefully it builds correctly when we later build from the Imakefile

       FLAGS = -f Makefile.ini $(MFLAGS) INCLUDES="-I../project" \
	       CC="$(CC)" BOOTSTRAPCFLAGS="$(BOOTSTRAPCFLAGS)" \
	       CDEBUGFLAGS=

all: FORCE
	@echo "Please read the installation manual for instructions, and do"
	@echo "not forget to check the config.h file in config/project."
	@echo "You should be using 'make World' or 'make Makefile' to build"
	@echo "the initial Makefile and begin installation."
	@echo " "
	@echo "Do not name your log file make.log or it will be deleted."
	@echo "If the top-level Makefile gets corrupted, copy Makefile.ini
	@echo "to Makefile and try again."

#
# Bootstrap Makefile from Imakefile and continue the world
# target from the generated Makefile.
#
World: makeMakefile
	$(MAKE) $(MFLAGS) makeWorld

Makefile: makeMakefile

makeMakefile: FORCE
	cd $(IMAKESRC); $(MAKE) $(FLAGS) clean; $(MAKE) $(FLAGS)
	-$(RM) Makefile.bak; $(MV) Makefile Makefile.bak
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

FORCE:

.PHONY: all World Makefile FORCE
