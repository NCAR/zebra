! $Id: cap-add,v 1.1 2000-12-01 23:49:30 granger Exp $
!
! The brains behind giving the user the choice of how to add a (scalar)
! platform to a CAP window.
!
! Here are the component options:
!
!   track
!   location
!   boat track
!   station plot

procedure cap-add platform string field string window string

! This is somewhat of a kludge in that we expect the ui$form variable
! to be set after the popup, so that we can set the state parameters
! from our arguments.

	popup ca-form
	local f ui$form
	formtext #f platform #platform
	formtext #f field #field
	formtext #f window #window

endprocedure

!
! Pulldown for grid brightness.
!
define widget ca-comp-menu intmenu 'cap components'
	title 'CAP Components'
	line
	entry 'Add Location'  'ca-add-comp location'
	entry 'Add Station Plot'  'ca-add-comp station'
	entry 'Add Aircraft Track'  'ca-add-comp track'
	entry 'Add Boat Track'  'ca-add-comp boat'
	entry 'Add Sounding Track'  'ca-add-comp balloon'
endmenu


!
! The foundation of the interface: a popup widget which gives the options
! for adding a given platform to the plot.
!
define widget ca-form form 'cap platform put'
	noheader
	popup ca-popup

	label title 'Add Platform to CAP Plot'
	button dismiss 'Dismiss' color red command 'popdown #ui$form'
	newline
	
	! Store our 'state' parameters at popup in labels
	label lplat 'Platform:' width 80
	label platform 'null' width 200
	newline
	label lfield 'Field:' width 80
	label field 'null' width 200
	newline
	label lwindow 'Window:' width 80
	label window 'null' width 200
	newline

	pulldown paddcomp 'Choose Component' menu ca-comp-menu
enddef


!
! This is only called so that the ui$form variable is set
! on popup for the time-height-add procedure to reference.
!
procedure ca-popup
	local f ui$form
endprocedure


procedure ca-add-comp comp string

	local f ui$form
	local plat getftext(f,'platform')
	local field getftext(f,'field')
	local window getftext(f,'window')
	local pd 'cap-components'
!
! Change the template component directly before adding it.
! This would also be where we might query the platform database
! for the default track and component icons and such...
!
	local rep PDParam(pd, comp, 'representation')
	if (rep = 'track')
		parameter #pd #comp field #field
	endif
	parameter #pd #comp platform #plat
	add #pd #comp #window

endprocedure

