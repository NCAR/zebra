!
! $Id: tseries-add,v 1.2 2000-12-01 23:49:30 granger Exp $
!
! Throw data onto a time series plot.  Try to give reasonable options
! for adding a new component for a platform or adding the platform
! to all components.  This should allow two modes of use: each component
! is a single platform with a single field, perhaps different than the
! fields of the other components; or, a component is a single field with
! multiple platforms and each component can be a different field.  Lastly,
! give the option of which side to put the axis on, or not at all.
!
! Here are the component options:
!
!   platform		single platform component
!   field		single field, multiple platforms

procedure tseries-add platform string field string window string

! This is somewhat of a kludge in that we expect the ui$form variable
! to be set after the popup, so that we can set the state parameters
! from our arguments.

	popup tsa-form
	local f ui$form
	formtext #f platform #platform
	formtext #f field #field
	formtext #f window #window

endprocedure

define widget tsa-comp-menu intmenu 'time series components'
	title 'Time Series Components'
	line
	entry 'Add component, left axis' 'tsa-add true true false'
	entry 'Add component, right axis' 'tsa-add true false true'
	entry 'Add component, no axes' 'tsa-add true false false'
	entry 'Add trace to existing components' 'tsa-add false false false'
endmenu

!
! The foundation of the interface: a popup widget which gives the options
! for adding a given platform to the plot.
!
define widget tsa-form form 'cap platform put'
	noheader
	popup tsa-popup

	label title 'Add Platform to Time Series Plot'
	button dismiss 'Dismiss' color red command 'popdown #ui$form'
	newline
	
	! Store our 'state' parameters at popup in labels
	label lplat 'Platform:' width 80
	label platform 'null' width 200
	newline
	label lfield 'Field:' width 80
	label field 'null' width 200
	newline
	label lwindow 'Window:' width 80
	label window 'null' width 200
	newline

	pulldown padd 'Choose Component' width 150 menu tsa-comp-menu

enddef


!
! This is only called so that the ui$form variable is set
! on popup for the time-height-add procedure to reference.
!
procedure tsa-popup
	local f ui$form
endprocedure


procedure tsa-add newcomp bool leftaxis bool rightaxis bool
	local pd "tseries-components"
	local f ui$form
	local platform getftext(f,'platform')
	local field getftext(f,'field')
	local window getftext(f,'window')
	local comps pd_complist(window)
	local nt 0
!
! Put the window on hold first.
!
	parameter #window global plot-hold true
!
! Go through the list of components in search of existing traces.  Count them.
!
	local dcomps ""
	foreach comp #comps
		if (comp <> 'global' and comp <> 'xy-grid')
			if (nt = 0)
				local dcomps comp
			else
				local dcomps concat3(dcomps, ' ', comp)
			endif
			local nt (nt + nvalue(window, comp, 'platform'))
		endif
	endfor
!
! OK, if we were told to add to existing components, do so.
!
	if (not newcomp)
		foreach comp #dcomps
!			message 'comp #' comp
			local plats PDParam(window, comp, 'platform')
			local plats quote(concat3(plats, ',', platform))
			parameter #window #comp platform #plats
			local colors PDParam(window, comp, 'field-color')
			local fcolor NthColor('xygraph', nt)
			local colors quote(concat3(colors, ',', fcolor))
			parameter #window #comp field-color #colors
			local nt (nt + 1)
		endfor
	else
		parameter #pd xytrace platform #platform
		parameter #pd xytrace y-field #field
		parameter #pd xytrace axis-left false
		parameter #pd xytrace axis-right false
		if (leftaxis)
			parameter #pd xytrace axis-left true
			parameter #pd xytrace axis-l-grid-intensity 0.75
		endif
		if (rightaxis)
			parameter #pd xytrace axis-right true
			parameter #pd xytrace axis-r-grid-intensity 0.75
		endif
		local fcolor NthColor('xygraph', 0)
		parameter #pd xytrace field-color #fcolor
		add #pd xytrace #window
	endif
!
! Release the window and we are done.
!
	parameter #window global plot-hold false
endprocedure
