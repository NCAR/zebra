!
! Form widget utilities
! $Id: form-utilities,v 1.3 2000-12-01 23:49:32 granger Exp $
!

!
! Set the text of a form entry based on a boolean plot description parameter:
!
!	fu-setenabled <form> <formentry> <component> <param> <default>
!	fu-setdisabled <form> <formentry> <component> <param> <default>
!
! where <form> and <formentry> define the entry whose text is to be changed,
! <param> is the plot description parameter to check, and <default> is the 
! default boolean value to use if the plot description parameter is undefined.
!
! For fu-setenabled, true maps to "Enabled" and false maps to "Disabled"
! For fu-setdisabled, true maps to "Disabled" and false maps to "Enabled"
!

set PUNDEF "(Undefined)"

procedure fu-setenabled form string entry string component string \
	param string default bool

	local state PDParam(component,param)
	if (state = PUNDEF)
		local bstate #default
	else
		local bstate #state
	endif

	if (bstate)
		formtext #form #entry "Enabled"
	else
		formtext #form #entry "Disabled"
	endif
endprocedure

procedure fu-setdisabled form string entry string component string \
	param string default bool

	local state PDParam(component,param)
	if (state = PUNDEF)
		local bstate #default
	else
		local bstate #state
	endif

	if (bstate)
		formtext #form #entry "Disabled"
	else
		formtext #form #entry "Enabled"
	endif
endprocedure

!
! Apply the text of an "Enabled"/"Disabled" form entry to a plot description 
! parameter:
!
!	fu-applyenabled <form> <formentry> <component> <pd_param>
!	fu_applydisabled <form> <formentry> <component> <pd_param>
!
! For fu-applyenabled, "Enabled" maps to true and "Disabled" maps to false
! For fu-applydisabled, "Enabled" maps to false and "Disabled" maps to true
!

procedure fu-applyenabled form string entry string component string \
	param string

	local state getftext(form,entry)

	if (state = "Enabled")
		parameter #component #param "True"
	else
		parameter #component #param "False"
	endif
endprocedure

procedure fu-applydisabled form string entry string component string \
	param string

	local state getftext(form,entry)

	if (state = "Disabled")
		parameter #component #param "True"
	else
		parameter #component #param "False"
	endif
endprocedure

!
! Toggle the text of an "Enabled"/"Disabled" form entry
!
!	fu-toggle-enabled
!

procedure fu-toggle-enabled
	local current getftext(ui$form,ui$formentry)
	if (current = "Enabled")
		formtext #ui$form #ui$formentry "Disabled"
	else
		formtext #ui$form #ui$formentry "Enabled"
	endif
endprocedure


! 
! Toggle a binary enum.  Expects to be called out of a menu, with
! icon_component set.  The first enum is the default, meaning the value
! of the parameter if it is not yet set.
!
procedure ToggleEnum param string enum1 string enum2 string
	local current PDParam(icon_component, param)
	if (current = enum2)
		parameter #icon_component #param #enum1
	else
		parameter #icon_component #param #enum2
	endif
endprocedure


procedure fu-toggle-enum enum1 string enum2 string
	local current getftext(ui$form,ui$formentry)
	if (current = enum2)
		formtext #ui$form #ui$formentry #enum1
	else
		formtext #ui$form #ui$formentry #enum2
	endif
endprocedure
