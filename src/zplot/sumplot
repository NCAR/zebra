#! /bin/sh
#
# $Id: sumplot,v 1.14 2002-01-14 21:23:27 granger Exp $
#
# Collect all the images of a given pattern, reduce their size, and
# put them into a table in the current directory.
#
# Also generate a "quick look" html section of the 2 most recent plots of
# each summary.  The sections can be concatenated to form a status overview
# of several summaries.

brightness=20
if [ "$1" = "-bright" ]; then
    brightness=$2
    shift; shift
fi

if [ $# -ne 4 -a $# -ne 5 ]; then

    echo "Usage: $0 [-bright %] <project> <pattern> <basedir> <destdir> [<htmlfile>]"
    echo "Finds all image files of the given <pattern> under <basedir>,"
    echo "creates thumbnails in <destdir> and a html table <htmlfile>."
    echo "If <htmlfile> not given, a default is created using the pattern."
    echo "Any text on standard input is inserted onto the page under the"
    echo "title."
    exit 1

fi

project=$1
pattern=$2
basedir=$3
destdir=$4

if [ ! -d $destdir ]; then
    echo "$destdir does not exist."
    exit 1
fi

if [ $# -eq 5 ]; then
    htmlfile=$5
else
    htmlfile=$destdir/summary-$pattern.html
fi

(cat <<EOF
<html><head><title>$project Plot Summary</title></head><body>
<body bgcolor="#ffffff">

<h1><IMG alt="National Center for Atmospheric Research" 
     SRC="http://www.atd.ucar.edu/gif/ncar_ban_sml.gif">
<br>
<A HREF="http://www.atd.ucar.edu/welcome.html"><IMG valign=center alt="ATD..." 
   SRC="http://www.atd.ucar.edu/gif/atd_ban_sml.gif"></a>
$project Plot Summary
</h1>
EOF

# Insert any text from standard input here
cat

echo "<hr><p>Click on an image to view the full-size plot.</p>"
echo "<table border="0" cellspacing=2 cellpadding=2><tr>"

i=0
find $basedir/. -type f -name "*${pattern}*.png" -o -name "*${pattern}*.gif" \
    | sort | while read path ; do

    image=`basename $path`
    destimage="$destdir/tn_$image"
    /bin/test $destimage -nt $path || \
	(set -x; convert -modulate $brightness -geometry 140x140 $path $destimage) 1>&2
    echo '<td bgcolor="#f0f0f0">'
    echo "<font size=-2><strong>$image<strong></font><br><a href=$path><img src=tn_$image></a>"
    echo "</td>"
    i=`expr $i + 1`
    if [ $i -eq 4 ]; then
    i=0
    echo "</tr><tr>"
    fi

done

echo "</tr></table>"
echo "</p>"
cat <<EOF
<HR SIZE=6 NOSHADE ALIGN=LEFT>
<FONT SIZE=1>&copy;
NCAR/Atmospheric Technology Division<br>
Email: <a href="mailto:granger@atd.ucar.edu">granger@atd.ucar.edu</a>
<br><HR WIDTH="100%"><BR>
<P><FONT SIZE=-2>
Created `date`
</FONT></p>
EOF
echo "</body></html>") > $htmlfile.$$
rm -f $htmlfile
mv -f $htmlfile.$$ $htmlfile
echo "Done generating $htmlfile"

# ----------------------------------------------------------------
# Generate a quick summary table section of the four most recent images.
#
number=4
quickpartfile="$htmlfile.quick.part"
(echo "<tr>"
echo "<td align=center colspan=$number><p><strong><a href="$htmlfile">$project</a></strong></p></td></tr><tr>"
find $basedir/. -type f -name "*${pattern}*.png" -o -name "*${pattern}*.gif" \
    | sort | tail -$number | while read path ; do

    image=`basename $path`
    destimage="$destdir/tn_$image"
    /bin/test $destimage -nt $path || \
	(set -x; convert -modulate $brightness -geometry 140x140 $path $destimage) 1>&2
    echo '<td align=center bgcolor="#f0f0f0">'
    echo "<font><strong>$image<strong></font><br><a href=$path><img src=tn_$image></a>"
    echo "</td>"

done
echo "</tr>") > $quickpartfile.$$

rm -f $quickpartfile
mv -f $quickpartfile.$$ $quickpartfile
echo "Done generating $quickpartfile"

