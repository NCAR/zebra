#! /usr/bin/env perl
#
# $Id: zplotloop,v 1.12 2006-05-02 22:52:53 granger Exp $
#
# Loop through times by a certain time step collecting from zplotd all the
# plots which need to be generated, then generate those plots with
# a single call to zplotbatch.
#

use Time::Local;
use POSIX;

if ( ! $ENV{'ZEB_TOPDIR'} ) { die "ZEB_TOPDIR must be set."; }
push(@INC,"$ENV{'ZEB_TOPDIR'}/bin");
require libzplot;

if ($#ARGV < 1)
{
    print "Usage: zplotloop <begin> <end> [<minutes>] [-enqueue <queue>]";
    print " [zplotd opts...]\n";
    print "The begin time can be 'start', which uses the project\n";
    print "start date and the first plot hour.\n";
    print "The end time can be 'now'.\n";
    print "The end time can be 'end', which uses the project end date.\n";
    print "The plot period in hours defaults to PLOT_PERIOD.\n";
    print "If the start and end are dates without times, then the first \n";
    print "plot hour is appended by default.  Dates and times have this \n";
    print "format: dd-Mon-yyyy,hh:mm:ss\n";
    exit 1;
}

$step = "$ENV{'PLOT_PERIOD'}";
$step = ($step * 60);
$begin = $ARGV[0];
$end = $ARGV[1];
shift; shift;
if ($ARGV[0] =~ /^[0-9]+$/)
{
    $step = $ARGV[0];
    shift;
}

$project_start_date = "$ENV{'PROJECT_START_DATE'}";
$project_end_date = "$ENV{'PROJECT_END_DATE'}";
$plot_hours = "$ENV{'PLOT_HOURS'}";
@hours = split(/\s+/,"$plot_hours");
if ("$begin" ne 'start')
{
    if ($plot_hours && "$begin" !~ /.*,[0-9:]+/)
    {
	$begin = $begin . "," . "$hours[0]:00";
	print "Using start time: $begin\n";
    }
    $sbegin = &ztsys($begin);
}
elsif (! $project_start_date)
{
    die "PROJECT_START_DATE must be set to use 'start' as begin time.";
}
elsif ( ! $plot_hours)
{
    die "PLOT_HOURS must be set to use 'start' as begin time.";
}
else
{
    $sbegin = &ztsys($project_start_date . "," . "$hours[0]:00");
}
$send = time();
if ('end' eq "$end")
{
    if (! $project_end_date)
    {
	die "PROJECT_END_DATE must be set to use 'end' as end time.";
    }
    elsif ( ! $plot_hours)
    {
	die "PLOT_HOURS must be set to use 'end' as end time.";
    }
    $send = &ztsys($project_end_date . "," . "$hours[0]:00");
}
elsif ("$end" ne 'now')
{
    if ($plot_hours && "$end" !~ /.*,[0-9:]+/)
    {
	$end = $end . "," . "$hours[0]:00";
	print "Using end time: $end\n";
    }
    $send = &ztsys($end);
}
$zplotd = "zplotd -d1 -norescan " . join(" ",@ARGV);
print "zplotd command: $zplotd\n";
print "Looping from ", &syszt($sbegin), " to ", &syszt($send), 
    ", step $step minutes.\n";

$stime = $sbegin;
$last = '';
while ($stime <= $send)
{
    $time = &syszt($stime);
    if ($last)
    {
	$cmd = "$zplotd -time $last $time";
	print "$cmd\n";
	system ("$cmd");
    }
    $last = $time;
    $stime += ($step * 60);
}

