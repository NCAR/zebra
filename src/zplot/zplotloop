#! /usr/local/bin/perl5
#
# $Id: zplotloop,v 1.2 2001-07-19 20:19:40 granger Exp $
#
# Loop through times by a certain time step collecting from zplotd all the
# plots which need to be generated, then generate those plots with
# a single call to zplotbatch.
#

use Time::Local;
use POSIX;

if ($#ARGV < 2)
{
    print "Usage: zplotloop <begin> <end> <hours> [-enqueue <queue>]";
    print " [zplotd opts...]\n";
    print "The end time can be 'now'.\n";
    exit 1;
}

$begin = $ARGV[0];
$end = $ARGV[1];
$step = $ARGV[2];
shift; shift; shift;

sub ztsys
{
    # print `ztsplit $_[0]`, "\n";
    ($year, $mon, $day, $hour, $min, $sec) = split(/\s+/,`ztsplit $_[0]`);
    $time = timegm($sec,$min,$hour,$day,$mon-1,$year);
}

sub syszt
{
    ($sec,$min,$hour,$mday,$mon,$year) = gmtime($_[0]);
    $ztime = strftime ("%d-%h-%Y,%H:%M:%S", $sec,$min,$hour,$mday,$mon,$year);
}


$sbegin = &ztsys($begin);
$send = time();
if ($end != 'now')
{
    $send = &ztsys($end);
}
$zplotd = "zplotd -d1 -norescan @ARGV ";
print "zplotd command: $zplotd\n";
print "Looping from ", &syszt($sbegin), " to ", &syszt($send), "\n";

$stime = $sbegin;
$last = '';
while ($stime <= $send)
{
    $time = &syszt($stime);
    if ($last)
    {
	$cmd = "$zplotd -time $last $time";
	print "$cmd\n";
	system ("$cmd");
    }
    $last = $time;
    $stime += ($step * 3600);
}

