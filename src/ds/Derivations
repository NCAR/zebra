/*
 * Zebra global default derivations.
 *
 * Most of the derivations are extracted from Paul Herzegh's "Formulation 
 * of Output Parameters for PAM II CMF Data" (FOPPCD) memo dated 18 March 1988.
 */

/*
 * Start with some constants
 */

_c_p_[][J/(kg K)] = 1005.7;	/* specific heat of dry air at constant
				   pressure */

_E_3_[][hPa] = 6.1078;		/* saturation vapor pressure over a plane
				   surface of water at 0 C */

_T_3_[][K] = 273.15;		/* Temperature of triple point of water */

_epsilon_[][1] = 0.622;		/* Ratio of molecular weight of water to
				   molecular weight of dry air.  This is
				   dimensionless, hence [1] for the
				   units (rather than [], which means
				   units are not specified) */

_R_d_[][J/(kg K)] = 287;	/* Gas constant for dry air */

_pi_[][] = 3.14159265358979323846;	/* Pi */


/*
 * Latent heat of condensation (J/kg) from temperature (K)
 * Ref: Note 1 of FOPPCD
 */
[L_c][J/kg] = 2.500e6 - 2369 * ([T][K] - 273);

/*
 * Mixing ratio (gram/kg) from vapor pressure (hPa) and pressure (hPa)
 * Ref: Note 2 of FOPPCD
 *
 * This used to be g/kg, but udunits interprets 'g' as the gravity
 * acceleration constant, or standard_free_fall.  Oops.  In fact, all
 * occurrences of g/kg in this file have been changed to gram/kg.
 */
[w][gram/kg] = 1000 * _epsilon_ * ([e][hPa] / ([P][hPa] - [e][hPa]));

/*
 * Vapor pressure (hPa) from relative humidity (%) and saturation vapor 
 * pressure (hPa)
 * Ref: definition of relative humidity
 */
[e][hPa] = 0.01 * [rh][%] * [e_sw][hPa];

/*
 * Vapor pressure (hPa) from pressure (hPa), temperature (K), and wet bulb 
 * temperature (K)
 * Ref: Note 3 of FOPPCD
 *
 * For this we calculate saturation vapor pressure (hPa) at T = T_wet
 * Ref: Note 6 of FOPPCD
 */
[e][hPa] = e_sw ([T_wet][K]) - [P][hPa] * ([T][K] - [T_wet][K]) * 
	(0.00066 * (0.6859 + 0.00115 * [T_wet][K]));

/*
 * Vapor pressure (hPa) from dewpoint (K)
 *
 * Ref: Note 5 of FOPPCD, inverted
 */
[e][hPa] = _E_3_ * exp (17.2694 * (1.0 - 237.3 / ([T_d][K] - _T_3_ + 237.3)));

/*
 * Relative humidity
 */
[rh][%] = 100.0 * [e][hPa] / [e_sw][hPa];

/*
 * Virtual temperature, from temperature (K), vapor pressure (hPa), and 
 * pressure (hPa)
 * Ref: Note 4 of FOPPCD
 */
[T_v][K] = [T][K] / (1 - ([e][hPa] / [P][hPa]) * (1 - _epsilon_));

/*
 * Dew point temperature (K) from vapor pressure (hPa)
 * Ref: Note 5 of FOPPCD
 */
[T_d][K] = _T_3_ + (237.3 * ln ([e][hPa] / _E_3_)) /
	(17.2694 - ln ([e][hPa] / _E_3_));

/*
 * Saturation vapor pressure over a plane surface of water (hPa), from 
 * temperature (K).  We use our convenient (and fast) built-in for this.
 * Ref: Note 6 of FOPPCD
 */
[e_sw][hPa] = e_sw ([T][K]);

/*
 * Temperature of the lifting condensation level (K), from temperature (K),
 * and dewpoint (K)
 * Ref: Note 7 of FOPPCD
 */
[T_L][K] = 1 / ((1 / ([T_d][K] - 56)) + (ln ([T][K] / [T_d][K]) / 800)) + 56;

/*
 * Potential temperature (K), from temperature (K), pressure (hPa), and
 * mixing ratio (gram/kg)
 * Ref: Note 8 of FOPPCD
 */
[theta][K] = [T][K] * pow ((1000 / [P][hPa]), 
			   (_R_d_ / _c_p_) * (1 - 0.00028 * [w][gram/kg]));

/*
 * Equivalent potential temperature (K), from potential temperature (K),
 * temperature of the lifting condensation level (K), and mixing ratio
 * (gram/kg)
 * Ref: Note 9 of FOPPCD
 */
[theta_e][K] = [theta][K] * exp ((3.376 / [T_L][K] - 2.54e-3) * [w][gram/kg] *
				 (1 + 0.81e-3 * [w][gram/kg]));

/*
 * Use the t_wet built-in to calculate wet bulb temperature from T, P, and rh
 */
[T_wet][K] = t_wet( [T][K], [P][hPa], [rh][%] );

/*
 * wspd, wdir -> uwind, vwind derivations
 *
 * wspd - wind speed
 * wdir - direction *from* which the wind is blowing, in degrees clockwise
 *	  from north
 * uwind - component of the wind *to* the east
 * vwind - component of the wind *to* the north
 */
[wspd][m/s] = sqrt([uwind][m/s] * [uwind][m/s] + [vwind][m/s] * [vwind][m/s]);

[wdir][degrees] = 57.29577951 * atan2(-[uwind][m/s], -[vwind][m/s]);

[uwind][m/s] = -[wspd][m/s] * sin(0.017453292 * [wdir][degrees]);

[vwind][m/s] = -[wspd][m/s] * cos(0.017453292 * [wdir][degrees]);
