/*
 * Imakefile for the DataStore
 */

MFVERSION="$Id: Imakefile,v 1.15 1993-08-12 18:25:01 granger Exp $"

LIBS=$(LIBZEB) $(LIBNETCDF) $(LIBRDSS)
/**/#LIBGCC=/usr/local/lib/gcc-lib/sparc-sun-sunos4.1.2/2.2/libgcc.a
/**/#LIBGCC=/locallib/gcc-lib/sparc-sun-sunos4.1/2.4.1/libgcc.a
LIBGCC=/locallib/gcc-lib/sparc-sun-sunos4.1/2.4.5/libgcc.a
CLIBS=$(LIBGCC)
PROOF=/net/rsf_pkgs/CenterLine/bin/proof
/* CCOPTIONS=-pipe -pg */

/* 
 * DSOBJS, DSSRCS = Daemon-specific object modules 
 */
DSOBJS= Daemon.o d_DataTables.o d_Config.o d_Notify.o d_Scan.o
DSSRCS= Daemon.c d_DataTables.c d_Config.c d_Notify.c d_Scan.c


/* 
 * DSLIBOBJS, DSLIBSRCS = normal DS library code 
 */
DSLIBOBJS = Appl.o DataFileAccess.o DFA_NetCDF.o ingest.o \
	GetList.o DFA_Boundary.o DFA_Raster.o Fields.o DFA_Zeb.o
DSLIBSRCS = Appl.c DataFileAccess.c DFA_NetCDF.c ingest.c \
	GetList.c DFA_Boundary.c DFA_Raster.c Fields.c DFA_Zeb.c

/* 
 * DCOBJS, DCSRCS =  data chunk modules 
 */
DCOBJS = DataChunk.o dc_Boundary.o dc_IRGrid.o dc_Image.o \
	dc_MetData.o dc_RGrid.o dc_Scalar.o dc_Transp.o dc_Attr.o \
	dc_Location.o dc_NSpace.o
DCSRCS = DataChunk.c dc_Boundary.c dc_IRGrid.c dc_Image.c \
	dc_MetData.c dc_RGrid.c dc_Scalar.c dc_Transp.c dc_Attr.c \
	dc_Location.c dc_NSpace.c

UTILSRCS = rfdump.c zfdump.c

/*
 * For debugging
 */
TESTSRCS = dstest.c dctest.c nstest.c nxtest.c


/*
 * All of the sources in this directory, for the make depend
 * For now, test programs are included as well, but this would
 * need to be changed if it is decided that they will not be
 * distributed with the general distribution
 */
SRCS = $(DSLIBSRCS) $(DCSRCS) $(DSSRCS) $(UTILSRCS)

PRIVATE_HEADERS = BoundaryFile.h DataChunkP.h dslib.h znfile.h \
		  RasterFile.h commands.h dfa.h dsDaemon.h dsPrivate.h

HEADERS = DataStore.h DataChunk.h ingest.h fields.h ds_fields.h

DISTFILES = Imakefile $(SRCS) $(PRIVATE_HEADERS) $(HEADERS) Daemon.state

NormalProgramTarget(dsDaemon,$(DSOBJS) $(DSLIBOBJS) $(DCOBJS),
		    $(DEPLIBS),$(LIBS) $(XLIBS), /**/)

UILoadFileTarget(dsDaemon.lf,Daemon.state)

/*
 * Make the library.
 */
NormalLibraryTarget (ZebDS, $(DSLIBOBJS) $(DCOBJS))

InstallLibrary (ZebDS, LibDir)

BuildIncludes($(HEADERS),.,.)

/*
 * Dump routines.
 */
NormalProgramTarget (rfdump, rfdump.o, /**/, /**/, /**/)

NormalProgramTarget (zfdump, zfdump.o, /**/, $(LIBZEB), /**/)

/*
 * Test routines.
 */
TestProgramTarget (nstest, nstest.o $(DSLIBOBJS) $(DCOBJS), $(DEPLIBS),
		  $(LIBS), /**/)

cc_nstest:: nstest.c $(DSLIBSRCS) $(DCSRCS)
	# setopt ansi
	# load $(ALLDEFINES) nstest.c  $(DSLIBSRCS) $(DCSRCS) \
		$(DEPLIBS) $(LIBS) $(SYS_LIBRARIES)  \
		$(EXTRA_LIBRARIES)   $(CLIBS)
	# link

nstest.tc:  nstest.o $(DSLIBOBJS) $(DCOBJS)  $(DEPLIBS)
	$(RM) $@
	$(PROOF) $(CC) -static -o $@  nstest.o $(DSLIBOBJS) $(DCOBJS) \
		$(LDOPTIONS) $(LIBS) $(LDLIBS)   $(EXTRA_LOAD_FLAGS)


/*
 * Saber stuff.  This is a bit complicated, depending on what you are
 * trying to debug.  The saber "#" construct makes it through the Sun
 * preprocessor; others may give trouble.
 *
 * Note that imake produces some saber rules for the normal program
 * targets.  Either those or these below can be used.  Or add your own!
 */
saber_lib:
	#setopt ansi
	#load $(CFLAGS) -I/usr/local/include $(DSLIBSRCS) $(DCOBJS)
	#load -Bstatic $(LIBS) $(LIBGCC)

DependTarget()

LintTarget()

DistfilesTarget($(DISTFILES))


