/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _DATATYPES_H_RPCGEN
#define	_DATATYPES_H_RPCGEN

#include <rpc/rpc.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * $Id: DataTypes.h,v 3.1 1999-03-01 16:32:08 burghart Exp $
 *
 * Simple datastore types required by platform and datafile protocol
 * structures.
 */

# ifndef __zebra_DataTypes_h_
# define __zebra_DataTypes_h_

# include <defs.h>	/* Primitive zebra library types. */


# ifndef TRUE
#	define TRUE 1
#	define FALSE 0
# endif


enum DataOrganization {
	OrgUnknown = 0,
	Org2dGrid = 1,
	OrgIRGrid = 2,
	OrgScalar = 3,
	OrgImage = 4,
	OrgOutline = 5,
	Org3dGrid = 6,
	OrgCmpImage = 7,
	Org1dGrid = 8,
	OrgTransparent = 9,
	OrgFixedScalar = 10,
	OrgNSpace = 11,
	OrgPolar = 12
};
typedef enum DataOrganization DataOrganization;

enum FileType {
	FTUnknown = -1,
	FTNetCDF = 0,
	FTBoundary = 1,
	FTRaster = 2,
	FTCmpRaster = 3,
	FTZebra = 4,
	FTZeb = 4,
	FTGRIB = 5,
	FTGRIBSfc = 6,
	FTGrads = 7,
	FTGradsModel = 8,
	FTHDF = 9,
	FTSweepFile = 10
};
typedef enum FileType FileType;
# endif /* ifndef  __zebra_DataTypes_h_ */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_DataOrganization(XDR *, DataOrganization*);
extern  bool_t xdr_FileType(XDR *, FileType*);

#else /* K&R C */
extern bool_t xdr_DataOrganization();
extern bool_t xdr_FileType();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_DATATYPES_H_RPCGEN */
