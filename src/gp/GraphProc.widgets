!
! Widget definitions for the graphics process.
!
! Most widgets have now been moved out of here, finding their home instead
! in the library directory and brought in through the require mechanism.
!
! $Id: GraphProc.widgets,v 1.7 1993-11-29 17:04:14 corbet Exp $
!
set ui$initial_state 'initial'






procedure ToggleEnable button string
!
! Toggle an enable button.
!
	local current getftext(ui$form,button)
	if (current = "Enabled")
		formtext #ui$form #button "Disabled"
	else
		formtext #ui$form #button "Enabled"
	endif
endprocedure



!
! Speed unit selection.
!
!define widget SpeedUnits intmenu "units"
!	title "Speed units (IGNORED!)"
!	line
!	entry "Meters/second" "SpeedUnits m/s"
!	entry "Miles/hour" "SpeedUnits mph"
!	entry "Furlongs/fortnight" "SpeedUnits f/f"
!endmenu


!procedure SpeedUnits units string
!	local qunits quote(units)
!	formtext #ui$form adv_units #qunits
!endprocedure




!
! The standard left button menu, which should get used for most data
! components.
!
define widget standard-cap-left-menu intmenu "leftmenu"
	title 'Overlay Operations'
	line
	entry 'Adjust Limits' 'i_adjust limit-proc'
	entry 'Spatial Offset options' 'require offsets; popup offsets'
	line
	entry 'Raise to top' 'move #icon_component 0'
	entry 'Move to bottom' 'move #icon_component 1'
	entry 'Disable/reenable' 'ToggleBoolean "disable" "true"' \
		(PDParam(icon_component,"disable") = "true")
	entry 'Remove' 'i_remove_component'
endmenu

!
! A minimal version for places where the other options don't make sense.
!
define widget minimal-cap-left-menu intmenu "leftmenu"
	title 'Overlay Operations'
	line
	entry 'Raise to top' 'move #icon_component 0'
	entry 'Move to bottom' 'move #icon_component 1'
	entry 'Disable/reenable' 'ToggleBoolean "disable" "true"' \
		(PDParam(icon_component,"disable") = "true")
	entry 'Remove' 'i_remove_component'
endmenu

!
! Remove a component.
!
procedure i_remove_component
	dm concat4('remove ', ourname, ' ', icon_component)
endprocedure

!
! Adjust the limits on a component.
!
procedure i_adjust procparam string
	local rep PDParam(icon_component, "representation")
	local proc PDSearch(icon_component, procparam, rep)
	if (proc <> "(Undefined)")
		#proc #icon_component
	else
		dm "beep"
	endif
endprocedure


!
! Useful procedures.
!

procedure ToggleEnable button string
!
!Toggle an enable button.
!
	local current getftext(ui$form,button)
	if (current = "Enabled")
		formtext #ui$form #button "Disabled"
	else
		formtext #ui$form #button "Enabled"
	endif
endprocedure



!
! Adjust procedures.
!

!
! The arrow scale adjuster.
!
procedure adj_arrow_scale comp string
	local current pd_param(icon_component, "arrow-scale", "string")
	activate singlefloat #comp 'arrow-scale' "Arrow Scale: " #current
endprocedure


!
! Toggle an arbitrary boolean parameter.  This guy expects to be called
! out of a menu, with icon_component set.
!
procedure ToggleBoolean param string
	local current (pd_param (icon_component, param, "string") = "true")
	if (current)
		parameter #icon_component #param false
	else
		parameter #icon_component #param true
	endif
endprocedure



!
! Line width menu for maps and such.
!
define widget LineWidth intmenu 'line width'
	title 'Line drawing parameters'
	line
	entry 'Thin lines' 'parameter #icon_component line-width 0'  \
		(pd_param (icon_component, "line-width", "string") = "0" or \
                 pd_param(icon_component,"line-width","string") ="(Undefined)")
	entry 'Thicker lines' 'parameter #icon_component line-width 2' \
		(pd_param (icon_component, "line-width", "string") = "2")
	entry 'Super-thick lines' 'parameter #icon_component line-width 3' \
		(pd_param (icon_component, "line-width", "string") = "3")
endmenu


!
! Commands to be executed out of the DataAvailable menu.  The invocation
! sequence is:
!
!	DAVCommand  platform  time
!
! Where platform and time correspond to the menu entry which was selected.
!
! The default action is to switch to the given platform and time, in 
! history mode.
!

procedure DefaultDataAvail platform string when string
!
! Switch to the given platform; however, let's check to see that we are
! not already on that one -- we can avoid frame cache invalidations that
! way.
!
	if (pd_param (icon_component, "platform", "string") <> platform)
		parameter #icon_component platform #platform
	endif
!
! Now drop into history mode and display this time.
!
	parameter global plot-mode history
	parameter global plot-time #when
endprocedure



!
! Global menu stuff.
!
define widget GlobalTopAnnot intmenu 'Annotation colors'
	title 'Top Annotation'
	line
	submenu 'Color' 'simple-color'
	line
	entry 'Small' 'TopAnnotSize 12' \
		(pd_param(icon_component, "ta-scale", "string") = "12")
	entry 'Medium' 'TopAnnotSize 20' \
		(pd_param(icon_component, "ta-scale", "string") = "20")
	entry 'Large' 'TopAnnotSize 24' \
		(pd_param(icon_component, "ta-scale", "string") = "24")
	line
	entry 'Color Match On' 'color_match true'  \
		(pd_param (icon_component, "ta-color-match", "string") = "true")
	entry 'Color Match Off' 'color_match false'  \
		(pd_param(icon_component, "ta-color-match", "string") = "false")
endmenu


procedure TopAnnotSize size string
	parameter global ta-scale #size
endprocedure
