!
! Widget definitions for the graphics process.
!
! Most widgets have now been moved out of here, finding their home instead
! in the library directory and brought in through the require mechanism.
!
! $Id: GraphProc.widgets,v 1.23 1997-10-23 22:15:47 burghart Exp $
!
set ui$initial_state 'initial'


!
! Toggle an enable button.
!
procedure ToggleEnable button string
	local current getftext(ui$form,button)
	if (current = "Enabled")
		formtext #ui$form #button "Disabled"
	else
		formtext #ui$form #button "Enabled"
	endif
endprocedure

!
! Default left button menu for the global component.
!
define widget global-left intmenu 'Global left menu'
	title 'Global Options'
	line
	entry 'Overlay Times Window...' 'popup overlay'
	entry 'Movie Controller...' 'popup movie'
	entry 'Generate Images...' 'popup imagecrank'
	entry 'Position Readout...' 'popup position'
	entry 'Model Forecast Times...' 'popup model'
	line
	submenu 'Window Regions' 'global-regions'
	submenu 'Change Scale' 'global-scale-menu'
	submenu 'Set Window Range' global-adjust-limits
	submenu 'Window Operations' global-window-ops
	submenu 'Layout Parameters'  global-layout
	line
	entry 'Help on this Plot Type' 'plot-type-help'
endmenu


define widget global-regions intmenu 'regions'
	title 'Project Regions'
	line
	entry 'Local' 'DoZoom -100 100 -100 100'
	entry 'Regional' 'DoZoom -500 500 -500 500'
	entry 'Mesoscale' 'DoZoom -1000 1000 -1000 1000'
endmenu


procedure plot-type-help
	local type PDParam("global","plot-type")
	if (type = "CAP")
		dm "help horizontal-plots"
	elseif (type = "skewt")
		dm "help skewt"
	elseif (type = "xsect")
		dm "help cross-section"
	elseif (type = "tseries")
		dm "message 'No help topic for tseries plot types'"
		dm "help index"
	elseif (type = "xygraph")
		dm "help xy-graphs"
	endif
endprocedure


!
! A menu for changing layout parameters
!
define widget global-layout intmenu 'layout parameters'
	title 'Layout Parameters'
	line
	submenu 'Icon Space Height' icon-space
	submenu 'Top Annotation Height' annotate-space
	submenu 'Legend Space Width' legend-space
	line
	submenu 'Left Axis Width' axis-left-space
	submenu 'Right Axis Width' axis-right-space
	line
	submenu 'Top Axis Height' axis-top-space
	submenu 'Bottom Axis Height' axis-bottom-space
	line
	entry 'Help' 'help layout'
endmenu


define widget icon-space intmenu 'icon space parameter'
	title 'Icon Space Height'
	line
	entry 'None' 'parameter global icon-space 0' \
		(PDParam("global","icon-space") = "0")
	line
	entry '2.5%' 'parameter global icon-space 0.025' \
		(PDParam("global","icon-space") = "0.025")
	entry '5%' 'parameter global icon-space 0.05' \
		(PDParam("global","icon-space") = "0.05")
	entry '7.5%' 'parameter global icon-space 0.075' \
		(PDParam("global","icon-space") = "0.075")
	entry '10%' 'parameter global icon-space 0.1' \
		(PDParam("global","icon-space") = "0.1")
	entry '15%' 'parameter global icon-space 0.15' \
		(PDParam("global","icon-space") = "0.15")
	entry '20%' 'parameter global icon-space 0.2' \
		(PDParam("global","icon-space") = "0.2")
	entry '30%' 'parameter global icon-space 0.3' \
		(PDParam("global","icon-space") = "0.3")
	line
	entry '20 pixels' 'parameter global icon-space 20' \
		(PDParam("global","icon-space") = "20")
	entry '40 pixels' 'parameter global icon-space 40' \
		(PDParam("global","icon-space") = "40")
	entry '50 pixels (default)' 'parameter global icon-space 50' \
		(PDParam("global","icon-space") = "50")
	entry '60 pixels' 'parameter global icon-space 60' \
		(PDParam("global","icon-space") = "60")
	entry '80 pixels' 'parameter global icon-space 80' \
		(PDParam("global","icon-space") = "80")
	entry '100 pixels' 'parameter global icon-space 100' \
		(PDParam("global","icon-space") = "100")
	entry '120 pixels' 'parameter global icon-space 120' \
		(PDParam("global","icon-space") = "120")
	entry '140 pixels' 'parameter global icon-space 140' \
		(PDParam("global","icon-space") = "140")
	entry '160 pixels' 'parameter global icon-space 160' \
		(PDParam("global","icon-space") = "160")
endmenu

define widget legend-space intmenu 'legend space parameter'
	title 'Side Legend Width'
	line
	entry 'None' 'parameter global sa-space 0' \
		(PDParam("global","sa-space") = "0")
	line
	entry '2.5%' 'parameter global sa-space 0.025' \
		(PDParam("global","sa-space") = "0.025")
	entry '5%' 'parameter global sa-space 0.05' \
		(PDParam("global","sa-space") = "0.05")
	entry '7.5%' 'parameter global sa-space 0.075' \
		(PDParam("global","sa-space") = "0.075")
	entry '10%' 'parameter global sa-space 0.1' \
		(PDParam("global","sa-space") = "0.1")
	entry '15% (default)' 'parameter global sa-space 0.15' \
		(PDParam("global","sa-space") = "0.15")
	entry '20%' 'parameter global sa-space 0.2' \
		(PDParam("global","sa-space") = "0.2")
	entry '30%' 'parameter global sa-space 0.3' \
		(PDParam("global","sa-space") = "0.3")
	line
	entry '20 pixels' 'parameter global sa-space 20' \
		(PDParam("global","sa-space") = "20")
	entry '40 pixels' 'parameter global sa-space 40' \
		(PDParam("global","sa-space") = "40")
	entry '60 pixels' 'parameter global sa-space 60' \
		(PDParam("global","sa-space") = "60")
	entry '80 pixels' 'parameter global sa-space 80' \
		(PDParam("global","sa-space") = "80")
	entry '100 pixels' 'parameter global sa-space 100' \
		(PDParam("global","sa-space") = "100")
	entry '120 pixels' 'parameter global sa-space 120' \
		(PDParam("global","sa-space") = "120")
	entry '140 pixels' 'parameter global sa-space 140' \
		(PDParam("global","sa-space") = "140")
	entry '160 pixels' 'parameter global sa-space 160' \
		(PDParam("global","sa-space") = "160")
endmenu

define widget annotate-space intmenu 'annotate space parameter'
	title 'Top Annotation Height'
	line
	entry 'None' 'parameter global ta-space 0' \
		(PDParam("global","ta-space") = "0")
	line
	entry '2.5%' 'parameter global ta-space 0.025' \
		(PDParam("global","ta-space") = "0.025")
	entry '5%' 'parameter global ta-space 0.05' \
		(PDParam("global","ta-space") = "0.05")
	entry '7.5%' 'parameter global ta-space 0.075' \
		(PDParam("global","ta-space") = "0.075")
	entry '10% (default)' 'parameter global ta-space 0.1' \
		(PDParam("global","ta-space") = "0.1")
	entry '15%' 'parameter global ta-space 0.15' \
		(PDParam("global","ta-space") = "0.15")
	entry '20%' 'parameter global ta-space 0.2' \
		(PDParam("global","ta-space") = "0.2")
	entry '30%' 'parameter global ta-space 0.3' \
		(PDParam("global","ta-space") = "0.3")
	line
	entry '20 pixels' 'parameter global ta-space 20' \
		(PDParam("global","ta-space") = "20")
	entry '40 pixels' 'parameter global ta-space 40' \
		(PDParam("global","ta-space") = "40")
	entry '60 pixels' 'parameter global ta-space 60' \
		(PDParam("global","ta-space") = "60")
	entry '80 pixels' 'parameter global ta-space 80' \
		(PDParam("global","ta-space") = "80")
	entry '100 pixels' 'parameter global ta-space 100' \
		(PDParam("global","ta-space") = "100")
	entry '120 pixels' 'parameter global ta-space 120' \
		(PDParam("global","ta-space") = "120")
	entry '140 pixels' 'parameter global ta-space 140' \
		(PDParam("global","ta-space") = "140")
	entry '160 pixels' 'parameter global ta-space 160' \
		(PDParam("global","ta-space") = "160")
endmenu

define widget axis-top-space intmenu 'axis top space'
	title 'Top Axis Height'
	line
	entry 'None' 'parameter global axis-top-space 0' \
		(PDParam("global","axis-top-space") = "0")
	line
	entry '2.5%' 'parameter global axis-top-space 0.025' \
		(PDParam("global","axis-top-space") = "0.025")
	entry '5%' 'parameter global axis-top-space 0.05' \
		(PDParam("global","axis-top-space") = "0.05")
	entry '7.5%' 'parameter global axis-top-space 0.075' \
		(PDParam("global","axis-top-space") = "0.075")
	entry '10%' 'parameter global axis-top-space 0.1' \
		(PDParam("global","axis-top-space") = "0.1")
	entry '15%' 'parameter global axis-top-space 0.15' \
		(PDParam("global","axis-top-space") = "0.15")
	entry '20%' 'parameter global axis-top-space 0.2' \
		(PDParam("global","axis-top-space") = "0.2")
	entry '30%' 'parameter global axis-top-space 0.3' \
		(PDParam("global","axis-top-space") = "0.3")
	line
	entry '20 pixels' 'parameter global axis-top-space 20' \
		(PDParam("global","axis-top-space") = "20")
	entry '40 pixels' 'parameter global axis-top-space 40' \
		(PDParam("global","axis-top-space") = "40")
	entry '60 pixels' 'parameter global axis-top-space 60' \
		(PDParam("global","axis-top-space") = "60")
	entry '80 pixels' 'parameter global axis-top-space 80' \
		(PDParam("global","axis-top-space") = "80")
	entry '100 pixels' 'parameter global axis-top-space 100' \
		(PDParam("global","axis-top-space") = "100")
	entry '120 pixels' 'parameter global axis-top-space 120' \
		(PDParam("global","axis-top-space") = "120")
	entry '140 pixels' 'parameter global axis-top-space 140' \
		(PDParam("global","axis-top-space") = "140")
	entry '160 pixels' 'parameter global axis-top-space 160' \
		(PDParam("global","axis-top-space") = "160")
endmenu

define widget axis-bottom-space intmenu 'axis bottom space'
	title 'Bottom Axis Height'
	line
	entry 'None' 'parameter global axis-bottom-space 0' \
		(PDParam("global","axis-bottom-space") = "0")
	line
	entry '2.5%' 'parameter global axis-bottom-space 0.025' \
		(PDParam("global","axis-bottom-space") = "0.025")
	entry '5%' 'parameter global axis-bottom-space 0.05' \
		(PDParam("global","axis-bottom-space") = "0.05")
	entry '7.5%' 'parameter global axis-bottom-space 0.075' \
		(PDParam("global","axis-bottom-space") = "0.075")
	entry '10%' 'parameter global axis-bottom-space 0.1' \
		(PDParam("global","axis-bottom-space") = "0.1")
	entry '15%' 'parameter global axis-bottom-space 0.15' \
		(PDParam("global","axis-bottom-space") = "0.15")
	entry '20%' 'parameter global axis-bottom-space 0.2' \
		(PDParam("global","axis-bottom-space") = "0.2")
	entry '30%' 'parameter global axis-bottom-space 0.3' \
		(PDParam("global","axis-bottom-space") = "0.3")
	line
	entry '20 pixels' 'parameter global axis-bottom-space 20' \
		(PDParam("global","axis-bottom-space") = "20")
	entry '40 pixels' 'parameter global axis-bottom-space 40' \
		(PDParam("global","axis-bottom-space") = "40")
	entry '60 pixels' 'parameter global axis-bottom-space 60' \
		(PDParam("global","axis-bottom-space") = "60")
	entry '80 pixels' 'parameter global axis-bottom-space 80' \
		(PDParam("global","axis-bottom-space") = "80")
	entry '100 pixels' 'parameter global axis-bottom-space 100' \
		(PDParam("global","axis-bottom-space") = "100")
	entry '120 pixels' 'parameter global axis-bottom-space 120' \
		(PDParam("global","axis-bottom-space") = "120")
	entry '140 pixels' 'parameter global axis-bottom-space 140' \
		(PDParam("global","axis-bottom-space") = "140")
	entry '160 pixels' 'parameter global axis-bottom-space 160' \
		(PDParam("global","axis-bottom-space") = "160")
endmenu

define widget axis-left-space intmenu 'axis left space'
	title 'Left Axis Width'
	line
	entry 'None' 'parameter global axis-left-space 0' \
		(PDParam("global","axis-left-space") = "0")
	line
	entry '2.5%' 'parameter global axis-left-space 0.025' \
		(PDParam("global","axis-left-space") = "0.025")
	entry '5%' 'parameter global axis-left-space 0.05' \
		(PDParam("global","axis-left-space") = "0.05")
	entry '7.5%' 'parameter global axis-left-space 0.075' \
		(PDParam("global","axis-left-space") = "0.075")
	entry '10%' 'parameter global axis-left-space 0.1' \
		(PDParam("global","axis-left-space") = "0.1")
	entry '15%' 'parameter global axis-left-space 0.15' \
		(PDParam("global","axis-left-space") = "0.15")
	entry '20%' 'parameter global axis-left-space 0.2' \
		(PDParam("global","axis-left-space") = "0.2")
	entry '30%' 'parameter global axis-left-space 0.3' \
		(PDParam("global","axis-left-space") = "0.3")
	line
	entry '20 pixels' 'parameter global axis-left-space 20' \
		(PDParam("global","axis-left-space") = "20")
	entry '40 pixels' 'parameter global axis-left-space 40' \
		(PDParam("global","axis-left-space") = "40")
	entry '60 pixels' 'parameter global axis-left-space 60' \
		(PDParam("global","axis-left-space") = "60")
	entry '80 pixels' 'parameter global axis-left-space 80' \
		(PDParam("global","axis-left-space") = "80")
	entry '100 pixels' 'parameter global axis-left-space 100' \
		(PDParam("global","axis-left-space") = "100")
	entry '120 pixels' 'parameter global axis-left-space 120' \
		(PDParam("global","axis-left-space") = "120")
	entry '140 pixels' 'parameter global axis-left-space 140' \
		(PDParam("global","axis-left-space") = "140")
	entry '160 pixels' 'parameter global axis-left-space 160' \
		(PDParam("global","axis-left-space") = "160")
endmenu

define widget axis-right-space intmenu 'axis right space'
	title 'Right Axis Width'
	line
	entry 'None' 'parameter global axis-right-space 0' \
		(PDParam("global","axis-right-space") = "0")
	line
	entry '2.5%' 'parameter global axis-right-space 0.025' \
		(PDParam("global","axis-right-space") = "0.025")
	entry '5%' 'parameter global axis-right-space 0.05' \
		(PDParam("global","axis-right-space") = "0.05")
	entry '7.5%' 'parameter global axis-right-space 0.075' \
		(PDParam("global","axis-right-space") = "0.075")
	entry '10%' 'parameter global axis-right-space 0.1' \
		(PDParam("global","axis-right-space") = "0.1")
	entry '15%' 'parameter global axis-right-space 0.15' \
		(PDParam("global","axis-right-space") = "0.15")
	entry '20%' 'parameter global axis-right-space 0.2' \
		(PDParam("global","axis-right-space") = "0.2")
	entry '30%' 'parameter global axis-right-space 0.3' \
		(PDParam("global","axis-right-space") = "0.3")
	line
	entry '20 pixels' 'parameter global axis-right-space 20' \
		(PDParam("global","axis-right-space") = "20")
	entry '40 pixels' 'parameter global axis-right-space 40' \
		(PDParam("global","axis-right-space") = "40")
	entry '60 pixels' 'parameter global axis-right-space 60' \
		(PDParam("global","axis-right-space") = "60")
	entry '80 pixels' 'parameter global axis-right-space 80' \
		(PDParam("global","axis-right-space") = "80")
	entry '100 pixels' 'parameter global axis-right-space 100' \
		(PDParam("global","axis-right-space") = "100")
	entry '120 pixels' 'parameter global axis-right-space 120' \
		(PDParam("global","axis-right-space") = "120")
	entry '140 pixels' 'parameter global axis-right-space 140' \
		(PDParam("global","axis-right-space") = "140")
	entry '160 pixels' 'parameter global axis-right-space 160' \
		(PDParam("global","axis-right-space") = "160")
endmenu


define widget global-scale-menu intmenu 'scale by factors'
	title 'Change Scale'
	line
	entry 'Expand View by 100%' 'scale-factor 2.0'
	entry 'Expand View by 50%' 'scale-factor 1.5'
	entry 'Expand View by 20%' 'scale-factor 1.2'
	line
	entry 'Narrow View by 20%' 'scale-factor 0.8'
	entry 'Narrow View by 50%' 'scale-factor 0.5'
	entry 'Narrow View by 75%' 'scale-factor 0.25'
endmenu

define widget global-window-ops intmenu 'window ops'
	title 'Window Operations'
	line
!	entry 'Zoom Window' 'dm concat("require zoom; zoom ",window_name)' 
	entry 'Reset Window' 'dm "require ResetWindow; ResetWindow"'
	entry 'Restart Window' 'dm concat("restart ",window_name)'
	entry 'Delete Window' 'dm concat("kill ",window_name)'
endmenu

!
! The Global Adjust Limits submenu
!
define widget global-adjust-limits intmenu "Adjust Global Limits"
	title 'Set Window Range'
	line
	entry 'X Limits' 'i_adjust_global x-limit-proc'
	entry 'Y Limits' 'i_adjust_global y-limit-proc'
endmenu

!
! Movie control submenu.  Some modules still refer to it.
!
define widget movie-control intmenu 'movie control'
	title 'Movie Control'
	line
	entry 'Popup Movie Controller' 'popup movie'
	entry 'Run Movie' 'movie run'
	entry 'Stop Movie' 'movie stop'
endmenu


procedure scale-factor factor real
	local xmin pd_paramsearch("global","x-min","","float")
	local xmax pd_paramsearch("global","x-max","","float")
	local ymin pd_paramsearch("global","y-min","","float")
	local ymax pd_paramsearch("global","y-max","","float")

	local sxmin string(xmin * factor)
	local sxmax string(xmax * factor)
	local symin string(ymin * factor)
	local symax string(ymax * factor)

	parameter global x-min #sxmin
	parameter global x-max #sxmax
	parameter global y-min #symin
	parameter global y-max #symax
endprocedure

!
! The standard left button menu, which should get used for most data
! components.
!
define widget standard-cap-left-menu intmenu "leftmenu"
	title 'Overlay Operations'
	line
	entry 'Adjust Limits' 'i_adjust limit-proc'
	entry 'Spatial Offset options' 'require offsets; popup offsets'
	line
	entry 'Raise to top' 'move #icon_component 0'
	entry 'Move to bottom' 'move #icon_component 1'
	entry 'Disable/reenable' 'ToggleBoolean "disable"' \
		(PDParam(icon_component,"disable") = "true")
	entry 'Remove' 'i_remove_component'
endmenu

!
! A medium version which doesn't do spatial offsets, but does have adjust
! 
!
define widget medium-cap-left-menu intmenu "leftmenu"
	title 'Overlay Operations'
	line
	entry 'Adjust Limits' 'i_adjust limit-proc'
	line
	entry 'Raise to top' 'move #icon_component 0'
	entry 'Move to bottom' 'move #icon_component 1'
	entry 'Disable/reenable' 'ToggleBoolean "disable"' \
		(PDParam(icon_component,"disable") = "true")
	entry 'Remove' 'i_remove_component'
endmenu

!
! A minimal version for places where the other options don't make sense.
!
define widget minimal-cap-left-menu intmenu "leftmenu"
	title 'Overlay Operations'
	line
	entry 'Raise to top' 'move #icon_component 0'
	entry 'Move to bottom' 'move #icon_component 1'
	entry 'Disable/reenable' 'ToggleBoolean "disable"' \
		(PDParam(icon_component,"disable") = "true")
	entry 'Remove' 'i_remove_component'
endmenu

!
! Left button menu for xsections
!
define widget xsect-left intmenu 'Xsect left menu'
	title 'Cross-section Options'
	line
	entry 'Overlay Times Window...' 'popup overlay'
endmenu


!
! Remove a component.
!
procedure i_remove_component
	dm concat4('remove ', window_name, ' ', icon_component)
endprocedure


!
! Adjust the limits on a component.
!
procedure i_adjust procparam string
	local rep PDParam(icon_component, "representation")
	local proc PDSearch(icon_component, procparam, rep)
	if (proc <> "(Undefined)")
		#proc #icon_component
	else
		dm "beep"
	endif
endprocedure

!
! Adjust the limits on the global component.
!
procedure i_adjust_global procparam string
	local proc pd_paramsearch(icon_component,procparam,"global","string")
	if (proc <> "(Undefined)")
		#proc 
	else
		dm "beep"
	endif
endprocedure

!
! The x min max adjuster.
!
procedure adj_x_minmax 
	local xmin pd_paramsearch("global", "x-min", "", "string")
	local xmax pd_paramsearch("global", "x-max", "", "string")
	activate doublefloat "global" "x-min" "X Min: " #xmin \
		"x-max" "X Max: " #xmax
endprocedure

!
! The y min max adjuster.
!
procedure adj_y_minmax 
	local ymin pd_paramsearch("global", "y-min", "", "string")
	local ymax pd_paramsearch("global", "y-max", "", "string")
	activate doublefloat "global" "y-min" "Y Min: " #ymin \
		"y-max" "Y Max: " #ymax
endprocedure

!
! The arrow and barb scale adjusters.
!
procedure adj_arrow_scale comp string
	local current pd_param(icon_component, "arrow-scale", "string")
	activate singlefloat #comp 'arrow-scale' "Arrow Scale: " #current
endprocedure

procedure adj_barb_scale comp string
	local current pd_param(icon_component, "barb-scale", "string")
	activate singlefloat #comp 'barb-scale' "Barb Scale: " #current
endprocedure


!
! Toggle an arbitrary boolean parameter.  This guy expects to be called
! out of a menu, with icon_component set.  If the parameter does not
! exist, it is set to true.
!
procedure ToggleBoolean param string
	local current (pd_param (icon_component, param, "string") = "true")
	if (current)
		parameter #icon_component #param false
	else
		parameter #icon_component #param true
	endif
endprocedure


!
! Line width menu for maps and such.
!
define widget LineWidth intmenu 'line width'
	title 'Line Width'
	line
	entry 'Thin' 'parameter #icon_component line-width 0'  \
		(PDParam(icon_component, "line-width") = "0" or \
                 PDParam(icon_component,"line-width") ="(Undefined)")
	entry 'Medium' 'parameter #icon_component line-width 2' \
		(PDParam (icon_component, "line-width") = "2")
	entry 'Thick' 'parameter #icon_component line-width 3' \
		(PDParam (icon_component, "line-width") = "3")
	entry 'Extra Thick' 'parameter #icon_component line-width 6' \
		(PDParam (icon_component, "line-width") = "6")
endmenu


!
! Set the constant altitude plot limits to the given values.
!
procedure DoZoom xmin string xmax string ymin string ymax string
	parameter global x-min #xmin
	parameter global x-max #xmax
	parameter global y-min #ymin
	parameter global y-max #ymax
endprocedure


!
! Commands to be executed out of the DataAvailable menu.  The invocation
! sequence is:
!
!	DAVCommand  platform  time
!
! Where platform and time correspond to the menu entry which was selected.
!
! The default action is to switch to the given platform and time, in 
! history mode.
!

procedure DefaultDataAvail platform string when string
!
! Switch to the given platform; however, let's check to see that we are
! not already on that one -- we can avoid frame cache invalidations that
! way.
!
	if (pd_param (icon_component, "platform", "string") <> platform)
		parameter #icon_component platform #platform
	endif
!
! Now drop into history mode and display this time.
!
	parameter global plot-mode history
	parameter global plot-time #when
endprocedure



!
! Global menu stuff.
!
define widget GlobalTopAnnot intmenu 'Annotation colors'
	title 'Top Annotation'
	line
	submenu 'Color' 'simple-color'
	line
	entry 'Tiny' 'TopAnnotSize 12' \
		(PDParam (icon_component, "ta-scale") = "12")
	entry 'Small' 'TopAnnotSize 14' \
		(PDParam (icon_component, "ta-scale") = "14")
	entry 'Medium' 'TopAnnotSize 20' \
		(PDParam (icon_component, "ta-scale") = "20")
	entry 'Large' 'TopAnnotSize 24' \
		(PDParam (icon_component, "ta-scale") = "24")
	line
	entry 'Color Match' 'ToggleBoolean ta-color-match' \
		(PDParam (icon_component, "ta-color-match") = "true")
	entry 'Window Name' 'ToggleBoolean ta-show-name' \
		(PDParam (icon_component, "ta-show-name") = "true")
endmenu


procedure TopAnnotSize size string
	parameter global ta-scale #size
endprocedure


!
! Perhaps universally useful procedure, which hides the fact that
! its actually the dm which does the work
!
procedure beep
	dm "beep"
endprocedure


!
! Image cranking
!
define widget imagecrank form 'Image cranker'
	noheader
	popup 'ic-popup'

	label title 'Batch image production'
	button zap 'Dismiss' command 'popdown #ui$form' color red
	newline

	label l1 'Begin time:'
	blank begin 'begin' width 150
!	newline

	label l2 'End time:'
	blank end 'end' width 150
	newline

	label l3 'Step:'
	blank step '60' width 80
	pulldown units 'minutes' menu ic-units
!	newline

	label l5 'File:'
	blank file 'image-%06d-%06d.gif' width 200

	label l4 'Format: '
	pulldown format 'gif' menu ic-format
	newline

	button doit 'Generate' command 'ic-generate'
	button abort 'Abort' command 'ic-abort' color red
	label gripe ' ' color red width 400
enddef



procedure ic-popup
	local f ui$form
	local pt PDParam('global','plot-time')

	formtext #f begin #pt
	formtext #f end #pt
	formtext #f gripe 'Make sure window is unobscured before starting'
endprocedure



define widget ic-units intmenu 'units'
	title 'Time step units'
	line
	entry 'Seconds' 'formtext #ui$form units "seconds"'
	entry 'Minutes' 'formtext #ui$form units "minutes"'
	entry 'Hours' 'formtext #ui$form units "hours"'
	entry 'Days' 'formtext #ui$form units "days"'
endmenu



define widget ic-format intmenu 'formats'
	title 'Output formats'
	line
	entry 'GIF' 'formtext #ui$form format "gif"'
	entry 'X window dump' 'formtext #ui$form format "xwd"'
	entry 'PostScript' 'formtext #ui$form format "pscolor"'
	entry 'PostScript (reverse video)' 'formtext #ui$form format "psrev"'
endmenu





!
! Actually make a phone book
!
procedure ic-generate
	set ICAbort false

	enqueue display 'ic-next'
endprocedure

!
! Generate next frame
!
procedure ic-next
	local f ui$form
	if (ICAbort)
		formtext #f gripe 'Aborted -- hit "Generate" to resume'
		return
	endif
	local pt getftext(f,'begin')
!
! Tell it to do the next plot.
!
	formtext #ui$form gripe 'Generating...'
	parameter global plot-mode history
	parameter global plot-time #pt
	enqueue whenever 'ic-dump'
!
! Figure out the next time.
!
	local dpt #pt
	local step getftext(f,'step')
	local units getftext(f,'units')
	if (units = 'seconds')
		local incr concat3('(',step,'/(3600*24.0))')
	elseif (units = 'minutes')
		local incr concat3('(',step,'/(60*24.0))')
	elseif (units = 'hours')
		local incr concat3('(',step,'/24.0)')
	else
		local incr step
	endif
	local dincr #incr
	local dpt (dpt + dincr)
	local et getftext(f,'end')
	local det #et
	if (dpt <= det)
		enqueue whenever 'ic-next'
	else
		formtext #f gripe 'Done.'
	endif
!
! Update the form
!
	local pt string(dpt)
	formtext #f begin #pt
endprocedure



procedure ic-dump
	local f ui$form
	if (ICAbort)
		formtext #f gripe 'Aborted -- hit "Generate" to continue'
		return
	endif
	formtext #f gripe 'Dumping...'
	local fmt getftext(f,'format')
	local file getftext(f,'file')
	imgdump #fmt #file
	formtext #f gripe 'Done.'
endprocedure


procedure ic-abort
	set ICAbort true
endprocedure


