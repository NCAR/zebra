/* -*- C -*- */
XCOMM ---------------------------------------------------------------------
XCOMM $Id: Imakefile,v 1.29 1995-10-24 21:59:31 corbet Exp $ 

/*		Copyright (C) 1987,88,89,90,91 by UCAR
 *	University Corporation for Atmospheric Research
 *		   All rights reserved
 *
 * No part of this work covered by the copyrights herein may be reproduced
 * or used in any form or by any means -- graphic, electronic, or mechanical,
 * including photocopying, recording, taping, or information storage and
 * retrieval systems -- without permission of the copyright owner.
 * 
 * This software and any accompanying written materials are provided "as is"
 * without warranty of any kind.  UCAR expressly disclaims all warranties of
 * any kind, either express or implied, including but not limited to the
 * implied warranties of merchantibility and fitness for a particular purpose.
 * UCAR does not indemnify any infringement of copyright, patent, or trademark
 * through use or modification of this software.  UCAR does not provide 
 * maintenance or updates for its software.
 */


LIBS = $(DFALIBS) $(ZLIBS) $(XLIBS) $(FLIBS) $(LIBPROJ)
SYSLIBS = $(LIBMATH) $(LIBTERMCAP) $(LIBREGEXP)


/* LIBRDSS = /rdss/ui/uilib.a /locallib/librdssutil.a */
DEPLIBS = $(LIBZEBDS) $(LIBZEB) /* $(LIBRDSS) */

/* CLIBS = /usr/local/lib/gcc-lib/sparc-sun-sunos4.1/2.1/libgcc.a */
CLIBS = /local/lib/gcc-lib/sparc-sun-solaris2/2.4.3/libgcc.a

#if UseOpenWindows && (OpenWindowsVersion < 3)
   LABELOBJS=Label.o
#else
   LABELOBJS= 
#endif

/*
 * Need to know whether we can try shared memory
 */
# if MapProjections
   MAPDEFINE=-DMAP_PROJECTIONS
# else
   MAPDEFINE=
# endif
DEFINES = $(SHMDEFINES) $(MAPDEFINE) /* -DXDEBUG */

/*
 * Projection.c needs the proj include directory when projections defined
 */
INCLUDES = $(PROJINCLUDES)

# if defined(HPArchitecture) && (! UseGcc)
   ALLOCA=alloca.o
# else
   ALLOCA=
# endif

# ifdef FObjDir
FOBJDIR = FObjDir
# else
FOBJDIR = .
# endif

OBJS =  ActiveArea.o $(ALLOCA) AltControl.o Annotate.o AnnotWidget.o \
	AxisControl.o ColorTable.o ConstAltPlot.o Contour.o \
	DataMenu.o derive.o DrawText.o EventQueue.o FieldMenu.o FillContour.o \
	FrameCache.o GraphProc.o GridAccess.o Histogram.o Icons.o \
	InsertWidget.o $(LABELOBJS) LayoutControl.o Lightning.o \
	LimitWidgets.o LLEvent.o ModelWidget.o MovieControl.o Ov_Grid.o \
	Overlay.o OverlayTimes.o PDMonitor.o PlotControl.o PlotExec.o \
	PlotPrim.o PositionWidget.o Projection.o RasterPlot.o RBand.o \
	Skewt.o TimeSeries.o Track.o UserEvent.o Utilities.o \
	VectorGrid.o XSection.o XYCommon.o XYContour.o XYGraph.o \
	XYObservation.o XYWind.o

FOBJS = $(FOBJDIR)/rgrid.o $(FOBJDIR)/bints.o $(FOBJDIR)/cfit.o

COBJS = TimeSeries.o ColorTable.o EventQueue.o LLEvent.o PlotControl.o \
	PlotExec.o UserEvent.o Contour.o FillContour.o \
	DrawText.o RasterPlot.o VectorGrid.o derive.o \
	Lightning.o Track.o GridAccess.o Overlay.o  PositionWidget.o\
	FrameCache.o MovieControl.o AltControl.o \
	Icons.o Skewt.o RBand.o Annotate.o XSection.o LimitWidgets.o \
	ConstAltPlot.o Utilities.o DataMenu.o $(ALLOCA) \
	XYGraph.o PlotPrim.o LayoutControl.o AxisControl.o $(LABELOBJS) \
	XYWind.o XYCommon.o XYContour.o InsertWidget.o AnnotWidget.o \
	XYObservation.o GraphProc.o PDMonitor.o FieldMenu.o ActiveArea.o \
	ModelWidget.o OverlayTimes.o Projection.o Ov_Grid.o Histogram.o

OBJS =	$(COBJS) $(FOBJS)

FSRCS = cfit.F mudras.f rgrid.F bints.f

SRCS =  AltControl.c AnnotWidget.c Annotate.c AxisControl.c \
	ColorTable.c ConstAltPlot.c Contour.c DataMenu.c DrawText.c \
	EventQueue.c FillContour.c FrameCache.c GraphProc.c \
	GridAccess.c Icons.c InsertWidget.c LLEvent.c Label.c \
	LayoutControl.c Lightning.c LimitWidgets.c MovieControl.c \
	Overlay.c PlotControl.c PlotExec.c PlotPrim.c PositionWidget.c \
	RBand.c RasterPlot.c Skewt.c TimeSeries.c Track.c UserEvent.c \
	Utilities.c VectorGrid.c XSection.c XYCommon.c XYContour.c \
	XYGraph.c XYObservation.c XYWind.c derive.c  sfont_1.c \
	PDMonitor.c FieldMenu.c ActiveArea.c ModelWidget.c OverlayTimes.c \
	alloca.c Projection.c Ov_Grid.c Histogram.c

HDRS =  AxisControl.h Contour.h DrawText.h EventQueue.h GC.h GraphProc.h \
	ActiveArea.h LLEvent.h Label.h LabelP.h LayoutControl.h PixelCoord.h \
	PlotPrim.h XYCommon.h ContourP.h derive.h getpagesize.h \
	gp_cmds.h rg_status.h rgrid.h

DISTFILES = Imakefile $(SRCS) $(FSRCS) $(HDRS) \
	    GraphProc.state GraphProc.widgets Graphproc.ad

CompleteProgramTarget(gp, $(OBJS), $(DEPLIBS), $(LIBS), $(SYSLIBS))

UILoadFileDepsTarget(graphproc.lf, GraphProc.state, GraphProc.widgets)

InstallAppDefaults(Graphproc)

TestProgramTarget(gtest,$(OBJS),$(DEPLIBS),$(LIBS),$(SYSLIBS))

CflowTarget(gp,GraphProc.o $(OBJS),)

DependTarget()

LintTarget()

DistfilesTarget($(DISTFILES))

