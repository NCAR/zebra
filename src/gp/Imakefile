/* -*- C -*- */
XCOMM ---------------------------------------------------------------------
XCOMM $Id: Imakefile,v 1.45 2001-11-30 21:29:28 granger Exp $ 

/*		Copyright (C) 1987,88,89,90,91 by UCAR
 *	University Corporation for Atmospheric Research
 *		   All rights reserved
 *
 * No part of this work covered by the copyrights herein may be reproduced
 * or used in any form or by any means -- graphic, electronic, or mechanical,
 * including photocopying, recording, taping, or information storage and
 * retrieval systems -- without permission of the copyright owner.
 * 
 * This software and any accompanying written materials are provided "as is"
 * without warranty of any kind.  UCAR expressly disclaims all warranties of
 * any kind, either express or implied, including but not limited to the
 * implied warranties of merchantibility and fitness for a particular purpose.
 * UCAR does not indemnify any infringement of copyright, patent, or trademark
 * through use or modification of this software.  UCAR does not provide 
 * maintenance or updates for its software.
 */

#ifdef UseFORTRAN
LIBS = $(DFALIBS) $(ZLIBS) $(LIBPROJ) $(XLIBS) $(FLIBS)
#else
LIBS = $(DFALIBS) $(ZLIBS) $(LIBPROJ) $(XLIBS) $(DORADELIB)
#endif
SYSLIBS = $(LIBMATH) $(LIBTERMCAP) $(LIBREGEXP)

INCLUDES = $(XINCLUDES) $(RDSSINCLUDES)

DEPLIBS = $(LIBZEBDS) $(ZLIBS)

#if UseOpenWindows && (OpenWindowsVersion < 3)
   LABELOBJS=Label.o
#else
   LABELOBJS= 
#endif

/*
 * Need to know whether we can try shared memory
 */
# if MapProjections
   MAPDEFINE=-DMAP_PROJECTIONS
# else
   MAPDEFINE=
# endif
/* DEFINES = -DXDEBUG */

DEPEND_DEFINES = $(SHMDEFINES) $(MAPDEFINE) $(PROJINCLUDES) $(RDSSINCLUDES)

# if (defined(HPArchitecture) && (! UseGcc)) || defined (AIXArchitecture)
   ALLOCA=alloca.o
# else
   ALLOCA=
# endif

# ifdef FObjDir
FOBJDIR = FObjDir/
# else
FOBJDIR = 
# endif

COBJS = ActiveArea.o $(ALLOCA) AltControl.o Annotate.o AnnotWidget.o \
	AxisControl.o ColorTable.o ConstAltPlot.o Contour.o \
	DataMenu.o DrawText.o EventQueue.o FieldMenu.o FillContour.o \
	FrameCache.o GraphProc.o GridAccess.o Histogram.o Icons.o \
	InsertWidget.o $(LABELOBJS) LayoutControl.o Lightning.o \
	LimitWidgets.o LLEvent.o ModelWidget.o MovieControl.o Ov_Grid.o \
	Overlay.o OverlayTimes.o PDMonitor.o PlotControl.o PlotExec.o \
	PlotPrim.o PositionWidget.o Projection.o RasterPlot.o RBand.o \
	ThetaPlot.o RasterImage.o \
	Skewt.o TimeSeries.o Track.o UserEvent.o Utilities.o Radar.o \
	VectorGrid.o XSection.o XYCommon.o XYContour.o XYGraph.o \
	XYObservation.o XYWind.o

CXXOBJS = FieldSelect.o PolarPlot.o

#ifdef notdef
/*
 * Objects requiring UI header files.
 */
UIOBJS = DataMenu.o FieldMenu.o GraphProc.o Icons.o InsertWidget.o \
	 LimitWidgets.o MovieControl.o Overlay.o PlotControl.o \
	 PlotExec.o RBand.o UserEvent.o

UISRCS = DataMenu.c FieldMenu.c GraphProc.c Icons.c InsertWidget.c \
	 LimitWidgets.c MovieControl.c Overlay.c PlotControl.c \
	 PlotExec.c RBand.c UserEvent.c
#endif

#ifdef UseFORTRAN
FOBJS = $(FOBJDIR)rgrid.o $(FOBJDIR)bints.o $(FOBJDIR)cfit.o
#else
FOBJS = rgridf2c.o bintsf2c.o cfitf2c.o
#endif

OBJS =	$(COBJS) $(CXXOBJS) $(FOBJS)

SRCS =  ActiveArea.c alloca.c AltControl.c  Annotate.c AnnotWidget.c \
	AxisControl.c ColorTable.c ConstAltPlot.c Contour.c \
	DataMenu.c DrawText.c EventQueue.c FieldMenu.c FillContour.c \
	FrameCache.c GraphProc.c GridAccess.c Histogram.c Icons.c \
	InsertWidget.c Label.c LayoutControl.c Lightning.c \
	LimitWidgets.c LLEvent.c ModelWidget.c MovieControl.c Ov_Grid.c \
	Overlay.c OverlayTimes.c PDMonitor.c PlotControl.c PlotExec.c \
	PlotPrim.c PositionWidget.c Projection.c RasterPlot.c RBand.c \
	Skewt.c TimeSeries.c Track.c UserEvent.c Utilities.c Radar.c \
	VectorGrid.c XSection.c XYCommon.c XYContour.c XYGraph.c \
	XYObservation.c XYWind.c sfont_1.c ThetaPlot.c RasterImage.c

SRCS_CXX = FieldSelect.cc PolarPlot.cc

#ifdef UseFORTRAN
FSRCS = cfit.F rgrid.F bints.f
#else
FSRCS = rgridf2c.c bintsf2c.c cfitf2c.c
#endif

ALLFSRCS = cfitf2c.c rgridf2c.c bintsf2c.c cfit.F rgrid.F bints.f

HDRS =  AxisControl.h Contour.h DrawText.h EventQueue.h GC.h GraphProc.h \
	ActiveArea.h LLEvent.h Label.h LabelP.h LayoutControl.h PixelCoord.h \
	PlotPrim.h XYCommon.h ContourP.h Skewt.h getpagesize.h gp_cmds.h \
	rg_status.h rgrid.h f2c.h

DISTFILES = Imakefile $(SRCS) $(SRCS_CXX) $(ALLFSRCS) $(HDRS) \
	    GraphProc.state GraphProc.widgets Graphproc.ad

CccProgramTarget(gp, $(OBJS), $(DEPLIBS), $(LIBS), $(SYSLIBS))

/* SpecialObjectRule($(UIOBJS),$(UISRCS),$(RDSSINCLUDES)) */
SpecialObjectRule(RasterPlot.o,RasterPlot.c,$(SHMDEFINES) $(MAPDEFINE))
SpecialObjectRule(RasterImage.o,RasterImage.c,$(SHMDEFINES) $(MAPDEFINE))

MAPOBJS = ConstAltPlot.o Ov_Grid.o
MAPSRCS = ConstAltPlot.c Ov_Grid.c
SpecialObjectRule($(MAPOBJS),$(MAPSRCS),$(MAPDEFINE))
SpecialObjectRule(Projection.o,Projection.c,$(MAPDEFINE) $(PROJINCLUDES))

UILoadFileDepsTarget(graphproc.lf, GraphProc.state, GraphProc.widgets)

InstallAppDefaults(Graphproc)

CccDependTarget($(SRCS_CXX))

TestProgramTarget(gtest,$(OBJS),$(DEPLIBS),$(LIBS),$(SYSLIBS))

CflowTarget(gp,GraphProc.o $(COBJS),/**/)

DependTarget()

LintTarget()

DistfilesTarget($(DISTFILES))

XCOMM Hardcoded dependencies to make sure we compile the correct source
XCOMM files, C or FORTRAN, depending upon whether UseFORTRAN is defined.
XCOMM These files are not included in the SRCS variable, which is used
XCOMM by the general depend target.

#ifdef UseFORTRAN
bints.o: bints.f
rgrid.o: rgrid.F rg_status.h rgrid.h
cfit.o: cfit.F rgrid.h
#else
bintsf2c.o: bintsf2c.c f2c.h
rgridf2c.o: rgridf2c.c f2c.h
cfitf2c.o: cfitf2c.c f2c.h
#endif

