! $Id: dm.state,v 1.29 1996-08-20 20:21:42 granger Exp $
!
! Command definition for the display manager.
!
!		Copyright (C) 1987,88,89,90,91 by UCAR
!	University Corporation for Atmospheric Research
!		   All rights reserved
!
! No part of this work covered by the copyrights herein may be reproduced
! or used in any form or by any means -- graphic, electronic, or mechanical,
! including photocopying, recording, taping, or information storage and
! retrieval systems -- without permission of the copyright owner.
! 
! This software and any accompanying written materials are provided "as is"
! without warranty of any kind.  UCAR expressly disclaims all warranties of
! any kind, either express or implied, including but not limited to the
! implied warranties of merchantibility and fitness for a particular purpose.
! UCAR does not indemnify any infringement of copyright, patent, or trademark
! through use or modification of this software.  UCAR does not provide 
! maintenance or updates for its software.
!

define state initial
	eoftext 'exit'
	ctable ui$command_table
	@ #ui$defs_file
	input 'config' 1
		next dm-config-name
	endinput
	input 'beginpd' 50
		next dm-opt-pdname
	endinput
	input 'display' 2
		next dm-disp-config
	endinput
	input 'list' 3
		next dm-opt-name
	endinput
	input 'newpd' 8
		next dm-newpd-win
	endinput
	input 'buttonmap' 9
		next ust$final_unmunged_string
	endinput
	input 'exchange' 11
		next dm-newpd-win
	endinput
	input 'beep' 14
		next ust$no_more
	endinput
	input 'pdload' 15
		next dm-pd-file
	endinput
	input 'pddir' 16
		next ust$final_unmunged_string
	endinput
	input 'pdshow' 60
		next ust$final_string
	endinput
	input 'pdwrite' 61
		next dm-pd-name
	endinput
	input 'pdstore' 62
		next dm-pd-storename
	endinput
	input 'pdcopy' 63
		next dm-pd-copyname
	endinput
	input 'pdlift' 64
		next dm-pd-liftname
	endinput
	input 'pddrop' 65
		next dm-drop-name
	endinput
	input 'parameter' 17
		next dm-param-pd
	endinput
	input 'remove' 18	! remove win|pd component
		next dm-rem-pd
	endinput
	input 'add' 19		! add pd comp win
		next dm-add-pd
	endinput
	input 'history' 20	! history all|window time
		next dm-history-target
	endinput
	input 'realtime' 21	! realtime all|window
		next dm-rt-window
	endinput
	input 'colortable' 22
		next ust$final_string
	endinput
	input 'dial' 29
		next dm-dial-number
	endinput
	input 'time' 32
		next ust$final_date
	endinput
	input 'pickwin' 33
		next ust$final_string
	endinput
	input 'shutdown' 35
		next ust$no_more
	endinput
	input 'sound' 37
		next ust$final_unmunged_string
	endinput
	input 'shell' 38
		next dm-shell-cmd
	endinput
	input 'restart' 39
		next dm-restart-win
	endinput
	input 'cfgsave' 40
		next dm-opt-name
	endinput
	input 'cfgconvert' 80
		next dm-cvt-src
	endinput
	input 'newconfig' 41
		next dm-newcfg-name
	endinput
	input 'newwindow' 42
		next dm-newwin-name
	endinput
	input 'newgraphic' 88
		next dm-newgraphic-class
	endinput
	input 'enter' 43
		next dm-enter-plat
	endinput
	input 'help' 44
		next dm-help-topic
	endinput
	input 'kill' 45
		next ust$final_unmunged_string
	endinput
	input 'cycle' 46
		next ust$no_more
	endinput
	input 'windowlist' 47
		next ust$final_string
	endinput
	input 'prototype' 84
		next dm-proto-key-or-class
	endinput
	input 'proto' 84
		next dm-proto-key-or-class
	endinput
	input 'query' 90
		next ust$no_more
	endinput
enddef


define state dm-cvt-src
	input string
		next dm-opt-name
	endinput
enddef


define state dm-opt-name
	input EOS
		done
	endinput
	input string
		next ust$no_more
	endinput
enddef



define state dm-newpd-win
	input expression
		next dm-newpd-pd
	endinput
enddef



define state dm-newpd-pd
	input expression
		next ust$no_more
	endinput
enddef


!----------------
! Config definition
!
define state dm-config
	eoftext 'endconfig'
	input 'window' 4
		next dm-window-name
	endinput
	input 'graphic' 81
		next dm-cfw-name
	endinput
	input 'widget' 36
		next dm-widget-name
	endinput
	input 'process' 83
		next dm-cfw-name
	endinput
	input 'endconfig' 5
		next ust$no_more
	endinput
enddef


!----------------
!The old window definition
!

define state dm-window-name
	input string
		next dm-win-x
	endinput
enddef



define state dm-win-x
	input integer
		next dm-win-y
	endinput
enddef



define state dm-win-y
	input integer
		next dm-win-dx
	endinput
enddef



define state dm-win-dx
	input integer
		next dm-win-dy
	endinput
enddef



define state dm-win-dy
	input integer
		next dm-win-program
	endinput
enddef


define state dm-win-program
	input EOS
		done
	endinput
	input string
		next dm-win-args
	endinput
enddef


define state dm-win-args
	input EOS
		done
	endinput
	input string
		next dm-win-args
	endinput
enddef


!----------------
! The graphic and process definitions
!

define state dm-cfw-name
	input string
		next dm-cfw-x
	endinput
enddef

define state dm-cfw-x
	input integer
		next dm-cfw-y
	endinput
enddef

define state dm-cfw-y
	input integer
		next dm-cfw-dx
	endinput
enddef

define state dm-cfw-dx
	input integer
		next dm-cfw-dy
	endinput
enddef

define state dm-cfw-dy
	input integer
		next dm-cfw-pclass
	endinput
enddef

define state dm-cfw-pclass
	input EOS
		done
	endinput
	input string
		next ust$no_more
	endinput
enddef



!----------------
! prototype [explicit] [fallback] [replace] class exec [args ...]
!
define state dm-proto-key-or-class
	input 'explicit' 85
		next dm-proto-key-or-class
	endinput
	input 'fallback' 86
		next dm-proto-key-or-class
	endinput
	input 'replace' 87
		next dm-proto-key-or-class
	endinput
	input string
		next dm-proto-exec
	endinput
enddef


define state dm-proto-exec
	input string
		next dm-win-args
	endinput
enddef


!
! restart window [process-class]
!
define state dm-restart-win
	input string
		next dm-restart-class
	endinput
enddef

define state dm-restart-class
	input EOS
		done
	endinput
	input string
		next ust$no_more
	endinput
enddef
		


!
! Within a "window" block, which is actually synonymous with 
! a "graphic" window rather than just any class of window.
!
define state dm-window
	eoftext 'endwindow'
	input 'endwindow' 6
		next ust$no_more
	endinput
	input 'endgraphic' 82
		next ust$no_more
	endinput
	input 'description' 7
		next ust$final_unmunged_string
	endinput
	input 'linkpd' 34
		next ust$final_int
	endinput
	input 'buttonmap' 9
		next ust$final_unmunged_string
	endinput
	input 'nongraphic' 30
		next ust$no_more
	endinput
	input 'forcepd' 31
		next ust$no_more
	endinput
enddef



!
! Button map definition.
! 
define state dm-in-map
	eoftext 'endmap'
	input 'endmap' 10
		next ust$no_more
	endinput
	input 'ignore' 27
		next ust$no_more
	endinput
	input 'dm' 25
		next dm-key-name
	endinput
	input 'local' 26
		next dm-key-name
	endinput
	input 'menu' 28
		next dm-key-name
	endinput
enddef


define state dm-key-name
	input string
		next ust$final_unmunged_string
	endinput
enddef


!
! A file followed by a pd name
!
define state dm-pd-file
	input string
		next ust$final_unmunged_string
	endinput
enddef

!
! A pd name followed by a file
!
define state dm-pd-name
	input string
		next ust$final_unmunged_string
	endinput
enddef

!
! A pd name, name to store the pd as, and the file to store to
!
define state dm-pd-storename
	input string
		next dm-pd-name
	endinput
enddef

!
! A pd name followed by a copy name
!
define state dm-pd-copyname
	input string
		next ust$final_string
	endinput
enddef

!
! A pd name followed by a component name followed by the copy name
!
define state dm-pd-liftname
	input string
		next dm-pd-liftcomp
	endinput
enddef

define state dm-pd-liftcomp
	input string
		next ust$final_string
	endinput
enddef

!
! pddrop <src> <comp1> <dest> <comp2>
!
define state dm-drop-name
	input string
		next dm-drop-comp
	endinput
enddef

define state dm-drop-comp
	input string
		next dm-drop-dest
	endinput
enddef

define state dm-drop-dest
	input string
		next ust$final_string
	endinput
enddef

!
! PARAMETER
!
define state dm-param-pd
	input string
		next dm-param-comp
	endinput
enddef

define state dm-param-comp
	input string
		next dm-param-param
	endinput
enddef

define state dm-param-param
	input string
		next ust$final_unmunged_string
	endinput
enddef


!
! Remove
!
define state dm-rem-pd
	input string
		next ust$final_string
	endinput
enddef

!
! Add
!
define state dm-add-pd
	input string
		next dm-add-comp
	endinput
enddef

define state dm-add-comp
	input string
		next dm-add-dest
	endinput
enddef

define state dm-add-dest
	input string
		next dm-add-opt-position
	endinput
enddef

define state dm-add-opt-position
	input EOS
		done
	endinput
	input integer
		next ust$no_more
	endinput
enddef


define state dm-history-target
	input expression
		next dm-history-time
	endinput
	input 'all' 0
		next dm-history-time
	endinput
enddef


define state dm-history-time
	input date
		next ust$no_more
	endinput
enddef

define state dm-rt-window
	input expression
		next ust$no_more
	endinput
	input 'all' 0
		next ust$no_more
	endinput
enddef



!
! parse the interior of a color table.
!
define state dm-ct-initial
	input 'entry' 0
		ignore
		next dm-ct-red
	endinput
	input real
		next dm-ct-green
	endinput
	input 'xcolor' 24
		next ust$final_unmunged_string
	endinput
	input 'endtable' 23
		next ust$no_more
	endinput
enddef

define state dm-ct-red
	input real
		next dm-ct-green
	endinput
enddef

define state dm-ct-green
	input real
		next ust$final_real
	endinput
enddef



!
! dial # [broadcast] process parameter [incr]
!
define state dm-dial-number
	input integer
		next dm-dial-process-grp
	endinput
enddef


define state dm-dial-process-grp
	input 'broadcast' 1
		next dm-dial-process
	endinput
	input string
		next dm-dial-parameter
	endinput
enddef


define state dm-dial-process
	input string
		next dm-dial-parameter
	endinput
enddef


define state dm-dial-parameter
	input string
		next dm-dial-opt-scale
	endinput
enddef


define state dm-dial-opt-scale
	input integer
		next ust$no_more
	endinput
	input eos
		done
	endinput
enddef



define state dm-config-name
	input string
		next dm-maybe-links
	endinput
enddef

define state dm-maybe-links
	input EOS
		done
	endinput
	input integer
		next ust$no_more
	endinput
enddef



define state dm-disp-config
	input string
		next dm-links
	endinput
enddef

define state dm-links
	input EOS
		done
	endinput
	input string
		next dm-links
	endinput
enddef

!
! Widget parameters.
!
define state dm-widget-name
	input string
		lowercase
		next dm-widget-x
	endinput
enddef

define state dm-widget-x
	input integer
		next dm-widget-y
	endinput
enddef

define state dm-widget-y
	input integer
		next dm-widget-dx
	endinput
enddef

define state dm-widget-dx
	input integer
		next dm-widget-dy
	endinput
enddef

define state dm-widget-dy
	input integer
		next ust$no_more
	endinput
enddef

define state dm-shell-cmd
	input expression
		next ust$no_more
	endinput
enddef


define state dm-newgraphic-class
	input string
		next dm-newwin-name
	endinput
enddef

define state dm-newwin-name
	input string
		next dm-nw-pd
	endinput
enddef

define state dm-nw-pd
	input string
		next dm-nw-params
	endinput
	input EOS
		done
	endinput
	input 'nongraphic' 30
		next ust$no_more
	endinput
	input 'buttonmap' 9
		next dm-nw-bmap
	endinput
	input 'forcepd' 31
		next dm-nw-params
	endinput
	input 'rename' 70
		next dm-nw-params
	endinput
	input 'reuse' 71
		next dm-nw-params
	endinput
enddef

define state dm-nw-params
	input EOS
		done
	endinput
	input 'buttonmap' 9
		next dm-nw-bmap
	endinput
	input 'forcepd' 31
		next dm-nw-params
	endinput
	input 'rename' 70
		next dm-nw-params
	endinput
	input 'reuse' 71
		next dm-nw-params
	endinput
enddef

define state dm-nw-bmap
	input string
		next dm-nw-params
	endinput
enddef

define state dm-newcfg-name
	input string
		next dm-newcfg-copy
	endinput
enddef

define state dm-newcfg-copy
	input EOS
		done
	endinput
	input string
		next ust$no_more
	endinput
enddef


!
! Position entry.
!
define state dm-enter-plat
	input string
		lowercase
		next dm-enter-lat
	endinput
enddef

define state dm-enter-lat
	input real
		next dm-enter-lat_min
	endinput
enddef

define state dm-enter-lat_min
	input real
		next dm-enter-lon
	endinput
enddef

define state dm-enter-lon
	input real
		next dm-enter-lon_min
	endinput
enddef

define state dm-enter-lon_min
	input real
		next dm-enter-alt
	endinput
enddef

define state dm-enter-alt
	input real
		next dm-enter-overwrite
	endinput
enddef

define state dm-enter-overwrite
	input date
		next ust$no_more
	endinput
	input EOS
		done
	endinput
enddef


define state dm-help-topic
	input EOS
		done
	endinput
	input string
		next dm-help-file
	endinput
enddef


define state dm-help-file
	input EOS
		done
	endinput
	input string
		next ust$no_more
	endinput
enddef

!
! Plot descriptions
!
define state dm-opt-pdname
	input EOS
		done
	endinput
	input string
		next ust$no_more
	endinput
enddef

define state dm-description
	eoftext 'endpd'
	input 'global' 53
		next ust$no_more
	endinput
	input 'parameter' 51
		next pd-parameter-name
	endinput
	input 'parm' 51
		next pd-parameter-name
	endinput
	input 'component' 52
		next pd-component-name
	endinput
	input 'comp' 52
		next pd-component-name
	endinput
	input 'endpd' 54
		next ust$no_more
	endinput
enddef

define state pd-parameter-name
	input string
		next pd-value
	endinput
enddef

define state pd-component-name
	input string
		next ust$no_more
	endinput
enddef

define state pd-value
	input string
		next ust$no_more
	endinput
enddef

procedure dm_state_id
	local '$Id: dm.state,v 1.29 1996-08-20 20:21:42 granger Exp $'
endprocedure

set ui$initial_state "initial"
read dm.widgets
