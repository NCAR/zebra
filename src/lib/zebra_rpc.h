/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _ZEBRA_RPC_H_RPCGEN
#define _ZEBRA_RPC_H_RPCGEN

#include <rpc/rpc.h>

/*
 * $Id: zebra_rpc.h,v 2.1 1999-03-01 02:28:54 burghart Exp $
 *
 * Zebra basic types which require XDR definitions and interfaces.
 */

/*
 * Here is the new zebra time format.  This looks suspiciously like the
 * BSD timeval structure....
 */

struct ZebraTime {
	long zt_Sec;
	long zt_MicroSec;
};
typedef struct ZebraTime ZebraTime;
#ifdef __cplusplus 
extern "C" bool_t xdr_ZebraTime(XDR *, ZebraTime*);
#elif __STDC__ 
extern  bool_t xdr_ZebraTime(XDR *, ZebraTime*);
#else /* Old Style C */ 
bool_t xdr_ZebraTime();
#endif /* Old Style C */ 


typedef ZebraTime ZebTime;
#ifdef __cplusplus 
extern "C" bool_t xdr_ZebTime(XDR *, ZebTime*);
#elif __STDC__ 
extern  bool_t xdr_ZebTime(XDR *, ZebTime*);
#else /* Old Style C */ 
bool_t xdr_ZebTime();
#endif /* Old Style C */ 

/*
 * Locations.
 */

struct Location {
	float l_lat;
	float l_lon;
	float l_alt;
};
typedef struct Location Location;
#ifdef __cplusplus 
extern "C" bool_t xdr_Location(XDR *, Location*);
#elif __STDC__ 
extern  bool_t xdr_Location(XDR *, Location*);
#else /* Old Style C */ 
bool_t xdr_Location();
#endif /* Old Style C */ 

/*
 * Scale and bias info for integer-encoded fields.
 */

struct ScaleInfo {
	float s_Scale;
	float s_Offset;
};
typedef struct ScaleInfo ScaleInfo;
#ifdef __cplusplus 
extern "C" bool_t xdr_ScaleInfo(XDR *, ScaleInfo*);
#elif __STDC__ 
extern  bool_t xdr_ScaleInfo(XDR *, ScaleInfo*);
#else /* Old Style C */ 
bool_t xdr_ScaleInfo();
#endif /* Old Style C */ 

/*
 * Regularly-spaced grids in geographical coordinates
 */
	/* X dimension spacing		*/
	/* Y (north/south) spacing	*/
	/* Vertical spacing		*/
	/* Dimensions			*/

struct RGrid {
	float rg_Xspacing;
	float rg_Yspacing;
	float rg_Zspacing;
	int rg_nX;
	int rg_nY;
	int rg_nZ;
};
typedef struct RGrid RGrid;
#ifdef __cplusplus 
extern "C" bool_t xdr_RGrid(XDR *, RGrid*);
#elif __STDC__ 
extern  bool_t xdr_RGrid(XDR *, RGrid*);
#else /* Old Style C */ 
bool_t xdr_RGrid();
#endif /* Old Style C */ 

/*
 * Altitude units.  If you add new units here, be sure to add associated
 * units strings and formats to altunits.c.
 */

enum AltUnitType {
	AU_kmMSL = 0,
	AU_mMSL = 1,
	AU_kmAGL = 2,
	AU_mAGL = 3,
	AU_mb = 4,
	AU_sigma = 5,
	AU_level = 6,
	AU_unknown = 7,
};
typedef enum AltUnitType AltUnitType;
#ifdef __cplusplus 
extern "C" bool_t xdr_AltUnitType(XDR *, AltUnitType*);
#elif __STDC__ 
extern  bool_t xdr_AltUnitType(XDR *, AltUnitType*);
#else /* Old Style C */ 
bool_t xdr_AltUnitType();
#endif /* Old Style C */ 


#endif /* !_ZEBRA_RPC_H_RPCGEN */
