/*		Copyright (C) 1987,88,89,90,91 by UCAR
 *	University Corporation for Atmospheric Research
 *		   All rights reserved
 *
 * No part of this work covered by the copyrights herein may be reproduced
 * or used in any form or by any means -- graphic, electronic, or mechanical,
 * including photocopying, recording, taping, or information storage and
 * retrieval systems -- without permission of the copyright owner.
 * 
 * This software and any accompanying written materials are provided "as is"
 * without warranty of any kind.  UCAR expressly disclaims all warranties of
 * any kind, either express or implied, including but not limited to the
 * implied warranties of merchantibility and fitness for a particular purpose.
 * UCAR does not indemnify any infringement of copyright, patent, or trademark
 * through use or modification of this software.  UCAR does not provide 
 * maintenance or updates for its software.
 */
MFVERSION="$Id: Imakefile,v 1.10 2001-01-17 20:29:49 granger Exp $"

/*
 * All individual ingest-related routines are kept in subdirectories.  Code
 * and header files which are shared among ingest modules are kept in the
 * DataStore library.  Some modules share FORTRAN code from MCIDAS, and
 * this code is compiled in ./mcidas and installed in a library called
 * libmcidas.a; this directory is listed first so that its library will be
 * installed before compiling any other ingest programs.
 */
#define IHaveSubdirs
#define PassCDebugFlags 'CDEBUGFLAGS=$(CDEBUGFLAGS)'

/*
 * If adding a new ingest directory, make sure you do all of the following:
 *
 * Determine a conditional build symbol and add a line for the symbol's
 * default value in config.h
 *
 * Add the test for the conditional symbol, which when positive defines
 * a variable whose value is the directory name.
 *
 * Add the directory variable to the SUBDIRS variable below.
 *
 * Add the directory name to the DISTSUBDIR variable below.
 *
 * Add a test for the negative of the build symbol at the end of this file,
 * calling OmitBuildRules() on the name of the ingest module.
 */
#if BuildIngestScheduler
IS = is
#endif
#if BuildClassIngest
CLASS = class
#endif
#if BuildRadarIngest
RADAR = radar
#endif
#if BuildSLGrabber
SLGRABBER = SLGrabber
#endif
#if BuildNowradIngest
NOWRAD = nowrad
#endif
#if BuildProfsIngest
PROFS = profs
#endif
#if BuildSatelliteIngest
SATELLITE = satellite
#endif
#if BuildRAPDataServerIngest
RAP_DATA_SERVER = rap_data_server
#endif
#if BuildWetnetIngest
WETNET = wetnet
#endif
#if BuildP3Composite
P3COMPOSITE = p3composite
#endif
#if BuildTOGASlowTape
TOGAST = togast
#endif
#if BuildSlowTapeIngest
ST_INGEST = st_ingest
#endif
#if BuildTAOIngest
TAO = tao
#endif
#if Build_GMS_ISCCP
GMSISCCP = gmsISCCP
#endif
#if Build_TRMM_SSMI
SSMI = ssmi
#endif
#if Build_TRMM_Rain
TRMM_RAIN = trmm_rain
#endif
#if Build_TRMM_Sonde
TRMM_SONDE = trmm_sonde
#endif
#if Build_FEST_P3_C130
FEST_P3_C130 = fest_p3_c130
#endif
#if BuildPrecipIngest
PRECIP = precip
#endif
#if BuildDAPIngest
DAP = dap
#endif
#if BuildPamIngest
PAM = pam
#endif

#ifdef notdef		/* ----------------------------------------------
			 * These directories are ignored since they
			 * currently reside in the zeb-nondist repository
			 * and are not being distributed in the Zeb tree
			 * ---------------------------------------------- */
#if BuildRadarLimits
RADARLIMITS = RadarLimits
#endif
#if BuildNatsIngest
NATS = nats
#endif
#if BuildP3Ingest
P3 = p3
#endif
#if BuildAircraftIngest
AIRCRAFT = aircraft
#endif
#if BuildFMIngest
FM = fm
#endif
#if BuildLLPIngest
LLP = llp
#endif
#endif		/* ---------------- Ignore non-distributed directories -- */

SUBDIRS = mcidas $(IS) $(CLASS) $(RADAR) $(SLGRABBER) $(NOWRAD) $(PROFS) \
	  $(SATELLITE) $(RADARLIMITS) $(NATS) $(P3) $(PAM) \
	  $(RAP_DATA_SERVER) $(WETNET) $(AIRCRAFT) $(FM) $(LLP) \
	  $(P3COMPOSITE) $(TOGAST) $(ST_INGEST) $(TAO) $(GMSISCCP) \
	  $(SSMI) $(TRMM_RAIN) $(TRMM_SONDE) $(FEST_P3_C130) $(PRECIP) \
	  $(DAP)

DISTFILES = Imakefile

/*
 * If any ingest module directories are added to zebra/src/ingest, they
 * should be included below.
 */
DISTSUBDIRS = mcidas is radar class nowrad SLGrabber satellite profs is tao \
	      p3composite st_ingest togast gmsISCCP pam rap_data_server \
	      wetnet ssmi trmm_rain trmm_sonde fest_p3_c130 precip \
	      dap

DistfilesTarget($(DISTFILES))

StandardSubdirTargets()

/*
 * Omission notices.  This might get verbal, but for testing and feedback
 * it will probably be very useful.
 */
#if !BuildIngestScheduler
OmitBuildRules(ingest scheduler)
#endif
#if !BuildClassIngest
OmitBuildRules(CLASS ingest)
#endif
#if !BuildRadarIngest
OmitBuildRules(radar ingest)
#endif
#if !BuildSLGrabber
OmitBuildRules(serial line grabber)
#endif
#if !BuildNowradIngest
OmitBuildRules(NOWRAD ingest)
#endif
#if !BuildProfsIngest
OmitBuildRules(profs ingest)
#endif
#if !BuildSatelliteIngest
OmitBuildRules(satellite ingest)
#endif
#if !BuildRAPDataServerIngest
OmitBuildRules(RAP data server)
#endif
#if !BuildWetnetIngest
OmitBuildRules(WETNET ingest)
#endif
#if !BuildP3Composite
OmitBuildRules(P3 composite ingest)
#endif
#if !BuildTOGASlowTape
OmitBuildRules(TOGA slow tape)
#endif
#if !BuildSlowTapeIngest
OmitBuildRules(slow tape ingest)
#endif
#if !BuildTAOIngest
OmitBuildRules(TAO ingest)
#endif
#if !Build_GMS_ISCCP
OmitBuildRules(GMS ISCCP ingest)
#endif
#if !Build_TRMM_SSMI
OmitBuildRules(TRMM SSMI ingest)
#endif
#if !Build_TRMM_Rain
OmitBuildRules(TRMM raingauge ingest)
#endif
#if !Build_TRMM_Sonde
OmitBuildRules(TRMM sonde ingest)
#endif
#if !Build_FEST_P3_C130
OmitBuildRules(StormFEST P3 and C130 ingest)
#endif
#if !BuildPrecipIngest
OmitBuildRules(PrecipIngest)
#endif
#if !BuildDAPIngest
OmitBuildRules(DAP ingest)
#endif
#if !BuildPamIngest
OmitBuildRules(PAM ingest)
#endif


#ifdef notdef	/* ---- Directories not presently being distributed ----- */
#if !BuildRadarLimits
OmitBuildRules(radar limits)
#endif
#if !BuildNatsIngest
OmitBuildRules(nats ingest)
#endif
#if !BuildP3Ingest
OmitBuildRules(P3 ingest)
#endif
#if !BuildAircraftIngest
OmitBuildRules(aircraft ingest)
#endif
#if !BuildFMIngest
OmitBuildRules(field mill ingest)
#endif
#if !BuildLLPIngest
OmitBuildRules(llp ingest)
#endif
#endif		/* ------------------------------------------------------ */
