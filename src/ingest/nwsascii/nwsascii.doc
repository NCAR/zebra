
The nwsscii program ingests subsets of NWS surface hourly ASCII data files,
where each record (line) of the file is an hourly report from a single
station.  The ingest program must be told what stations to expect and the
location of each, and these stations must be defined as sub-platforms to
the Zeb datastore.  To run the ingestor for the UAV:

1. The ASCII data files must be reduced to the relevant stations.  For now,
I guess that's OK and KS.  The perl script extract.pl extracts these stations,
but it leaves the header record (which contains the date of the reports).
Run this script like this:

	extract.pl hour23.010494 > hour23.010494.ksok

foreach of the ASCII data files.  If the files are already reduced and they
contain the orignal header line, then this step is not necessary.

2.  Run the ingestor on the .ksok files.

	nwsascii hour23.010494.ksok sgpsfchrlyX1.a1 uav.stations


------------------------------------------------------------------------
Usage: nwsascii <input_file> <platform> [<command_file>]
Ingest Options:
   -blow,-chunks        Dump data chunks when stored
   -noel                Don't send to EventLogger
   -dryrun,-dry,-test   Don't connect to other processes, e.g. the DataStore
   -log all|e|p|c|d|i|v Set the messages which get echoed to the terminal
                        The default is emergencies only.
                           all: all messages; same as -log epcdiv
                           e:   emergencies
                           p:   problems
                           c:   clients
                           d:   debugging
                           i:   information
                           v:   development debugging
   -name                Print the program name in log messages to the terminal
   -help, -h            Show this help information

If you ever want to see the data the ingestor is reading and storing, run
the ingestor as usual, but add the options '-test -log all'.  The ingestor
will not connect to any Zeb processes, so it won't store anything, but it
will write out the data as it reads it as it would have been stored.

The config.pl script can be used to generate the station list found in
uav.stations.  The script takes ASCII data files as input and outputs a
list of the stations found as commands for the nwsascii command file.
Run it on a more than one file in case some stations didn't report on
a particular day, and then use sort and uniq to remove redundancies.

config.pl hour23.*.ksok | sort | uniq > stations



