C   THIS IS SSEC PROPRIETARY SOFTWARE - ITS USE IS RESTRICTED.
      FUNCTION NVXINI(IFUNC,IPARMS)
C *** McIDAS Revision History ***
C 1 NVXLAMB.DLM 19-Jan-94,12:46:22,`KENB' Initial release (4345)
C 2 NVXLAMB.DLM 7-Mar-94,9:14:10,`USER' Released
C 3 NVXLAMB.DLM 8-Mar-94,14:08:18,`KENB' fix to bug near equator (4432)
C 4 NVXLAMB.DLM 31-Mar-94,22:49:44,`BARRYR' Add proprietary statement
C 5 NVXLAMB.DLM 1-Jul-94,9:21:38,`USER' Released
C *** McIDAS Revision History ***
      DIMENSION IPARMS(100)
      CHARACTER*4 CLIT
      COMMON/LAMCOM/XROW,XCOL,XLAT1,XLAT2,XSPACE,XQLON,XBLAT,ITYPE
      COMMON/LAMCM2/XFAC,XFAC1,XPOLE,IHEM
      DATA RAD/.01745329/

      IF (IFUNC.EQ.1) THEN

         IF (IPARMS(1).NE.LIT('LAMB')) THEN
            NVXINI=-1
            RETURN
         ENDIF

         ITYPE=1
         XROW=IPARMS(2)
         XCOL=IPARMS(3)
         IPOLE=IPARMS(12)
         IF(IPOLE.EQ.0) IPOLE=900000
         IHEM=1

         IF(IPOLE.LT.0) IHEM=-1

         XPOLE=FLALO(IPOLE)

         XLAT1=FLALO(IPARMS(4))
         XLAT2=FLALO(IPARMS(5))
         XLAT1=(90. - IHEM*XLAT1)*RAD
         XLAT2=(90. - IHEM*XLAT2)*RAD

         XSPACE=IPARMS(6)/1000.
         XQLON=FLALO(IPARMS(7))
         R=IPARMS(8)/1000.

         XFAC = ( ALOG ( SIN(XLAT1) ) - ALOG ( SIN(XLAT2) ) ) /
     &          ( ALOG ( TAN(.5*XLAT1) ) - ALOG ( TAN (.5*XLAT2) ) )

         XFAC1=1.0/XFAC

         XBLAT=R*SIN(XLAT1)/(XSPACE*XFAC*TAN(XLAT1*.5)**XFAC)

      ELSE IF (IFUNC.EQ.2) THEN
         IF(INDEX(CLIT(IPARMS(1)),'XY').NE.0) ITYPE=1
         IF(INDEX(CLIT(IPARMS(1)),'LL').NE.0) ITYPE=2

      ENDIF

      NVXINI=0

      RETURN
      END
c
c-------------------------------------------------------------------
c
      FUNCTION NVXSAE(XLIN,XELE,XDUM,XLAT,XLON,Z)
      COMMON/LAMCOM/XROW,XCOL,XLAT1,XLAT2,XSPACE,XQLON,XBLAT,ITYPE
      COMMON/LAMCM2/XFAC,XFAC1,XPOLE,IHEM
      DATA RAD/.01745329/

      NVXSAE = -1

      XLDIF=IHEM*(XLIN-XROW)/xblat
      XEDIF=-ihem*(XELE-XCOL)/xblat
      XRLON=0
      IF(.NOT.(XLDIF.EQ.0.AND.XEDIF.EQ.0)) XRLON=ATAN2(XEDIF,XLDIF)

      XLON=IHEM*XRLON/XFAC/RAD+XQLON
      XLON = AMOD(XLON+900., 360.) - 180.0
C***
      RADIUS=SQRT(XLDIF*XLDIF+XEDIF*XEDIF)
      IF (ABS(RADIUS).LT.1.E-10) THEN
         XLAT=IHEM*90
      ELSE
         XLAT=IHEM*(90.-2*ATAN(EXP(ALOG(RADIUS)/XFAC))/RAD)
      ENDIF

      IF(ITYPE.EQ.1) THEN
         YLAT=XLAT
         YLON=XLON
         CALL NLLXYZ(YLAT,YLON,XLAT,XLON,Z)
      ENDIF

      NVXSAE=0

      RETURN
      END
c
c-------------------------------------------------------------------
c
      FUNCTION NVXEAS(ZLAT,ZLON,Z,XLIN,XELE,XDUM)
      COMMON/LAMCOM/XROW,XCOL,XLAT1,XLAT2,XSPACE,XQLON,XBLAT,ITYPE
      COMMON/LAMCM2/XFAC,XFAC1,XPOLE,IHEM
      DATA RAD/.01745329/

      XLAT=ZLAT
      XLON=ZLON

      IF(ITYPE.EQ.1) THEN
         X=XLAT
         Y=XLON
         CALL NXYZLL(X,Y,Z,XLAT,XLON)
      ENDIF

      XRLON=IHEM*(XLON-XQLON)
      XRLON = AMOD(XRLON+900., 360.) - 180.0
      XRLON=XRLON*XFAC*RAD

      XCLAT=(90. - IHEM*XLAT)*RAD*.5

      IF (XCLAT .EQ. 0.0) THEN
	 XRLAT = 0.0
      ELSE
	 XRLAT= XBLAT*TAN(abs(XCLAT))**XFAC
      ENDIF

      XLIN=XROW + IHEM*(XRLAT*COS(XRLON))
      XELE=XCOL - IHEM*(XRLAT*SIN(XRLON))

      NVXEAS=0

      RETURN
      END
c
c-------------------------------------------------------------------
c
      FUNCTION NVXOPT(IFUNC,XIN,XOUT)
      COMMON/LAMCOM/XROW,XCOL,XLAT1,XLAT2,XSPACE,XQLON,XBLAT,ITYPE
      COMMON/LAMCM2/XFAC,XFAC1,XPOLE,IHEM
      REAL*4 XIN(*),XOUT(*)
      CHARACTER*4 CLIT,CFUNC
      DATA RAD/.01745329/
C
C IFUNC= 'SPOS'    SUBSATELLITE LAT/LON
C
C        XIN - NOT USED
C        XOUT - 1. STANDARD LATITUDE (AVERAGE)
C             - 2. NORMAL LONGITUDE

      CFUNC=CLIT(IFUNC)
      NVXOPT=0

      IF(CFUNC.EQ.'SPOS') THEN
         XOUT(1)=XPOLE-(XLAT1+XLAT2)/(2.*RAD)
         XOUT(2)=XQLON

      ELSE
         NVXOPT=1

      ENDIF

      RETURN
      END
