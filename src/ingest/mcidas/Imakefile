/* -*- C -*-
 * Installs the MCIDAS object files into libmcidas.a
 * for ingest modules like
 * nowrad and satellite.  Note that any program which references these
 * routines must also link with the FORTRAN libraries ($(FLIBS))
 */
MFVERSION = "$Id: Imakefile,v 1.8 1997-06-30 20:49:39 granger Exp $"

FSRCS = cfd.f cfg.f cfi.f cfr.f cfz.f clit.f ddest.f dpsino.f \
        edest.f flalo.f ftime.f geolat.f idmyyd.f iftok.f ih.f \
        iround.f itime.f len_trim.f lit.f llcart.f lwendw.f lwmop.f \
        lwo.f movcw.f movwc.f nchars.f nvxgoes.f nvxgvar.f nvxps.f \
        nvxrect.f raerac.f sdest.f solarp.f spout.f squak.f \
        timdif.f volnam.f xonoff.f

SRCS =  dc.c delfil.c dw.c ffiletoc.c filbuf.c getday.c gettim.c \
        ic.c iopn.c laddr.c leof.c luc.c mcidas.c movb.c movbmem.c \
        puc.c scra.c sendtext.c stc.c /* nav.c */

HEADERS = mcidas.h

ALLSRCS = $(FSRCS) $(SRCS)

NAVOBJS = nvxgoes.o nvxps.o nvxrect.o nvxgvar.o

OBJS =  clit.o flalo.o ftime.o geolat.o iround.o itime.o lit.o llcart.o \
	movcw.o movwc.o raerac.o solarp.o timdif.o movb.o \
	cfd.o cfg.o cfi.o cfr.o cfz.o ddest.o edest.o dpsino.o \
	idmyyd.o iftok.o ih.o len_trim.o lwendw.o lwmop.o lwo.o nchars.o \
	sdest.o spout.o squak.o volnam.o xonoff.o \
	puc.o movbmem.o gettim.o ic.o getday.o dw.o sendtext.o laddr.o leof.o \
	iopn.o luc.o filbuf.o scra.o stc.o dc.o delfil.o ffiletoc.o \
	$(NAVOBJS) mcidas.o

/*
 * Leave UNDERSCORE undefined if for some reason a FORTRAN compiler does not
 * want to append underscores to its symbols.  For the architectures we
 * support at present, UNDERSCORE needs to be defined.
 */
DEFINES = -DUNDERSCORE=1

XCOMM nvx*.f files contain definitions of the nvxeas, nvxini, 
XCOMM nvxopt, and nvxsae routines required by the satellite ingestors.
XCOMM They are U. of Wisconsin SSEC copyrighted code and should *not* be 
XCOMM distributed outside of NCAR/UCAR.

DISTFILES = Imakefile $(ALLSRCS) $(HEADERS) README

all:: $(OBJS)

XCOMM Special targets to rename the common navigation entry points to
XCOMM unique symbols so we can link to all of them in one program:

/*
 * We can't use a -D option to redefine symbols on some FORTRAN compilers
 * (i.e., AIX), so we have to do the substitutions ourselves.
 */
#define NavRule(base,sub) \
base.o: base.f								@@\
	$(RM) base.F 							@@\
	sed `echo -e 's/NVXINI/NNNINI/g' -e 's/NVXEAS/NNNEAS/g' \	@@\
	          -e 's/NVXSAE/NNNSAE/g' -e 's/NVXOPT/NNNOPT/g' | \	@@\
		sed -e 's,NNN,sub,g'` < base.f > base.F			@@\
	RemoveFile($@)							@@\
	$(FC) -c $(FCFLAGS) $*.F					@@\
									@@\
clean::									@@\
	RemoveFile(base.F)						@@\



/*
 * These name substutions must match the method names used in mcidas.c!
 * And they must begin with I-N so FORTRAN returns an integer type!
 */
NavRule(nvxgoes,NGS)
NavRule(nvxps,NPS)
NavRule(nvxrect,NRC)
NavRule(nvxgvar,NGV)

NormalLibraryTarget(mcidas,$(OBJS))

InstallLibrary(mcidas,$(LIBDIR))

BuildIncludesTop($(HEADERS))
InstallMultipleFlags($(HEADERS),$(INCDIR),$(INSTINCFLAGS))

DistfilesTarget($(DISTFILES))

DependTarget()

