/* -*- C -*-
 * Installs the MCIDAS object files into libmcidas.a
 * for ingest modules like
 * nowrad and satellite.  Note that any program which references these
 * routines must also link with the FORTRAN libraries ($(FLIBS))
 */
XCOMM Nearly all of the source files in this directory are U. of Wisconsin 
XCOMM SSEC copyrighted code and should *not* be distributed outside 
XCOMM of NCAR/UCAR.

MFVERSION = "$Id: Imakefile,v 1.12 2003-01-10 01:09:03 granger Exp $"

REALMCIDAS=$(McINST_ROOT)/src/libmcidas.a
CHECKOBJ=$(McINST_ROOT)/src/alit.o

SRCS = mcidas_nav.c

HEADERS = mcidas_nav.h

ALLSRCS = $(FSRCS) $(SRCS)

NAVOBJS = nvxdmsp.o nvxgoes.o nvxgraf.o nvxgvar.o nvxlamb.o nvxmerc.o \
	  nvxmoll.o nvxmsat.o nvxps.o nvxradr.o nvxrect.o nvxsin.o \
	  nvxtanc.o nvxtiro.o nvxgmsx.o nvxairc.o nvxlalo.o nvxmsg.o \
          nvxnowr.o

OBJS =  $(SRCS:.c=.o) $(NAVOBJS)

/*
 * Leave UNDERSCORE undefined if for some reason a FORTRAN compiler does not
 * want to append underscores to its symbols.  For the architectures we
 * support at present, UNDERSCORE needs to be defined.
 */
DEFINES = -DUNDERSCORE=1

DISTFILES = Imakefile $(ALLSRCS) $(HEADERS) README

MCIDASOBJS=

all:: mcidascheck

NormalLibraryTarget(mcidas,$(OBJS) $(wildcard $(McINST_ROOT)/src/?*.o))

InstallLibrary(mcidas,$(LIBDIR))

BuildIncludesTop($(HEADERS))
InstallMultipleFlags($(HEADERS),$(INCDIR),$(INSTINCFLAGS))

DistfilesTarget($(DISTFILES))

DependTarget()

XCOMM Special targets to rename the common navigation entry points to
XCOMM unique symbols so we can link to all of them in one program:

/*
 * We can't use a -D option to redefine symbols on some FORTRAN compilers
 * (i.e., AIX), so we have to do the substitutions ourselves.
 */
#define NavRuleSed(base,sub,sedfile) \
base.o: $(McINST_ROOT)/src/base.dlm					@@\
	$(RM) base.f							@@\
	sed `sed -e 's,NNN,sub,g' < sedfile` < $(McINST_ROOT)/src/base.dlm > base.f	@@\
	RemoveFile($@)							@@\
	$(FC) -c $(FCFLAGS) base.f					@@\
									@@\
clean::									@@\
	RemoveFile(base.f)						@@\

#define NavRule(base,sub) NavRuleSed(base,sub,nvx.sed)

/*
 * These name substitutions must match the method names used in mcidas.c!
 * And they must begin with I-N so FORTRAN returns an integer type!
 */
NavRule(nvxdmsp,NDM)
NavRule(nvxgraf,NGR)
NavRule(nvxgvar,NGV)
NavRule(nvxlamb,NLA)
NavRule(nvxmerc,NME)
NavRule(nvxmoll,NMO)
NavRule(nvxmsat,NMS)
NavRule(nvxps,NPS)
NavRule(nvxradr,NRA)
NavRule(nvxrect,NRC)
NavRule(nvxsin,NSI)
NavRule(nvxtanc,NTA)
NavRule(nvxtiro,NTI)
NavRule(nvxairc,NAI)
NavRule(nvxlalo,NLO)
NavRule(nvxmsg,NMG)
NavRule(nvxnowr,NOW)

NavRuleSed(nvxgoes,NGS,goes.sed)
NavRuleSed(nvxgmsx,NGX,goes.sed)

mcidascheck: checkpath $(McINST_ROOT)/jpeg/jconfig.h $(CHECKOBJ)

$(CHECKOBJ): $(McINST_ROOT)/jpeg/jconfig.h
	(cd $(McINST_ROOT)/src && make mclog mcar mccomp mcfc && \
	 make VENDOR=-g77 libmcidas.a)


$(McINST_ROOT)/jpeg/jconfig.h: 
	@echo "Configuring $(McINST_ROOT)/jpeg to create jconfig.h" ; \
	(cd $(McINST_ROOT)/jpeg && ./configure)

checkpath: 
	@if [ ! -f $(McINST_ROOT)/src/hex80.inc ]; then \
	echo "McINST_ROOT not set correctly.  Set McINST_ROOT to the top"; \
	echo "directory of the MCIDAS source tree."; \
	exit 1; \
	fi ; \
	rm -f hex80.inc ; ln -s $(McINST_ROOT)/src/hex80.inc .

clean::
	rm -f hex80.inc
